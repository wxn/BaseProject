//
//  ExchangeTypeViewController.m
//  XTWL_IOS_SHOP
//
//  Created by Cinna on 2017/9/15.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "ExchangeTypeViewController.h"

@interface ExchangeTypeViewController () <UITableViewDelegate, UITableViewDataSource>

@end

@implementation ExchangeTypeViewController {
    NSArray *titleArray;
    UITableView *tableView;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.navigationItem.title = NaviTitle_ExchangeType;
    titleArray = @[ShopLOGO,Account,Password,ShopReviewInfo,Printer,CurrentVersion];
    [self initSubviews];
}

- (void)initSubviews {
    
    tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, Start_Height, Screen_Width, titleArray.count * 48) style:UITableViewStylePlain];
    tableView.rowHeight = 48;
    tableView.backgroundColor = WHITE_COLOR;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.scrollEnabled = NO;
    [self.view addSubview:tableView];
    
    UIButton *logoutBtn = [CreateView createCustomBtnWithFrame:CGRectMake(SpaceLeftRight, Start_Height + titleArray.count * 48 + 50, Screen_Width - SpaceLeftRight * 2, 40) title:Logout image:nil titleColorStr:ColorText_606060 fontSize:FontSize_14 superView:self.view];
    [logoutBtn addTarget:self action:@selector(logoutClick) forControlEvents:UIControlEventTouchUpInside];
    logoutBtn.backgroundColor = ColorWithHexString(Color_MainFFDA44);
}

- (void)reloadShopInfo {
    [tableView reloadData];
}

#pragma mark -
//修改LOGO
- (void)changeLogoClick {
    UIActionSheet *sheet;
    if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
        sheet  = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:AlertBtn_Cancle destructiveButtonTitle:nil otherButtonTitles:TakePhoto, ChooseFromLocal, nil];
    else
        sheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:AlertBtn_Cancle destructiveButtonTitle:nil otherButtonTitles:ChooseFromLocal, nil];
    sheet.tag = 100;
    [sheet showInView:self.view];
}

- (void)logoutClick {
    
}

#pragma mark - ActionSheetDelegate
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (actionSheet.tag == 100) {
        NSUInteger sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
        // 判断是否支持相机
        if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
            switch (buttonIndex) {
                case 0://相机
                    sourceType = UIImagePickerControllerSourceTypeCamera;
                    break;
                case 1: //相册
                    sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
                    break;
                default:
                    return;
            }
        }else {
            if (buttonIndex == 0) {
                sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;
            }else {
                return;
            }
        }
        // 跳转到相机或相册页面
        UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
        imagePickerController.delegate = (id)self;
        imagePickerController.allowsEditing = YES;
        imagePickerController.sourceType = sourceType;
        
        [self presentViewController:imagePickerController animated:YES completion:nil];
    }
}

#pragma mark - UIImagePickerDelegate
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:YES completion:nil];
    UIImage *originalImage = [info objectForKey:UIImagePickerControllerEditedImage];  //UIImagePickerControllerOriginalImage
    //    UIImageOrientation imageOrientation=originalImage.imageOrientation;
    //    if(imageOrientation!=UIImageOrientationUp)
    //    {
    //        // 原始图片可以根据照相时的角度来显示，但UIImage无法判定，于是出现获取的图片会向左转９０度的现象。
    //        // 以下为调整图片角度的部分
    //        UIGraphicsBeginImageContext(originalImage.size);
    //        [originalImage drawInRect:CGRectMake(0, 0, originalImage.size.width, originalImage.size.height)];
    //        originalImage = UIGraphicsGetImageFromCurrentImageContext();
    //        UIGraphicsEndImageContext();
    //        // 调整图片角度完毕
    //    }
    //选取图片 上传
    [self sendRequestToUploadImage:originalImage];
}

#pragma mark - UITableViewDelegate && UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return titleArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@""];
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    
    cell.textLabel.font = Font14;
    cell.textLabel.textColor = ColorWithHexString(ColorText_333333);
    cell.textLabel.text = titleArray[indexPath.row];
    [CreateView createLineViewWithFrame:CGRectMake(SpaceLeftRight, 47.5, Screen_Width - SpaceLeftRight, 0.5) colorStr:ColorLine_ededed superView:cell.contentView];
    
    [CreateView createLineViewWithFrame:CGRectMake(SpaceLeftRight, 0, Screen_Width - SpaceLeftRight, 0.5) colorStr:ColorLine_ededed superView:cell.contentView];
    
    UILabel *rightLabel = [CreateView createLabelWithFrame:CGRectMake(Screen_Width - 30 - 100, 14, 100, 20) text:@"" fontSize:FontSize_14 textColorStr:ColorText_999999 superView:cell.contentView];
    rightLabel.textAlignment = NSTextAlignmentRight;
    
    switch (indexPath.row) {
        case 0: {
            UIImageView *headImageView = [CreateView createImageViewWithFrame:CGRectMake(Screen_Width - 30 - 30, 9, 30, 30) image:nil superView:cell.contentView];
            [headImageView sd_setImageWithURLStr:@"" placeholderImage:ImageWithContentFile(@"h_pic")];
            SetViewCorner(headImageView, 15);
            rightLabel.text = @"";
            break;
        }
        case 1:
            rightLabel.text = @"";
            break;
        case 2:
            rightLabel.text = @"";
            break;
        case 3:
            rightLabel.text = @"";
            break;
        case 4:
            rightLabel.text = @"";
            break;
        case 5:
            rightLabel.text = [NSString stringWithFormat:@"v%@",App_Version];
            break;
        default:
            break;
    }
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    switch (indexPath.row) {
        case 0:
            //LOGO
            [self changeLogoClick];
            return;
        case 1:
            //账号
            return;
        case 2:
            //密码
            return;
        case 3:
            //店铺审核信息
            return;
        default:
            break;
    }
}

#pragma mark -
- (void)sendRequestToUploadImage:(UIImage *)image {
    ShowProcessHud;
    WeakSelf;
    [RequestManager sendRequestToUploadImageWithURLString:ServerUrl_Upload image:image completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        
        if ([resultCode isEqualToString:@"0"]) {
            [weakSelf sendRequestToChangeUserInfoWithKey:@"headPortrait" value:resultDesc isShowProcessHud:NO];
        }else {
            HideProcessHud;
            [weakSelf showToast:ToastMsg_NetworkFailed];
        }
        
    } failedBlock:^(NSError *error) {
        HideProcessHud;
        [weakSelf showToast:ToastMsg_NetworkFailed];
    }];
}

- (void)sendRequestToChangeUserInfoWithKey:(NSString *)key value:(NSString *)value isShowProcessHud:(BOOL)isShowProcessHud {
    if (isShowProcessHud)
        ShowProcessHud;
    WeakSelf;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setValue:@"4" forKey:@"type"];//1（绑定手机/修改密码），2微信，3qq，4其他
    [dic setValue:value forKey:key];
    [RequestManager sendPostRequestWithURLString:ServerUrl_Write modular:@"" requestName:@"" parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        HideProcessHud;
        if ([resultCode isEqualToString:@"0"]) {
            [weakSelf sendRequestToGetUserInfo];
        }
        
    } failedBlock:^(NSError *error) {
        HideProcessHud;
        [weakSelf showToast:ToastMsg_NetworkFailed];
    }];
    
}

//获取账户信息
- (void)sendRequestToGetUserInfo {
    WeakSelf;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    
    [RequestManager sendPostRequestWithURLString:ServerUrl_Read modular:@"" requestName:@"" parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        
        if ([resultCode isEqualToString:@"0"]) {
            
        }
        
    } failedBlock:^(NSError *error) {
        
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
