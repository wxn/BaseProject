//
//  LocationMapViewController.m
//  XTWL_IOS_SHOP
//
//  Created by Zhaoyang on 2017/10/18.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "LocationMapViewController.h"
#import <MAMapKit/MAMapKit.h>
#import <AMapLocationKit/AMapLocationKit.h>
#import <AMapSearchKit/AMapSearchKit.h>
#import "MapSearchViewController.h"
#import "OpenShopInfo.h"
@interface LocationMapViewController ()<MAMapViewDelegate,AMapLocationManagerDelegate,AMapSearchDelegate>{
    CLLocationCoordinate2D mapCenterCoor;
    NSString *addressLatitude;
    NSString *addressLongitude;
    NSString *userDetailAddress;
    BOOL isOk;//光取到经纬度没有地址的时候不允许点保存 只有两者都有才允许保存
}
PropertyStrong AMapLocationManager *locationManager;
PropertyStrong AMapSearchAPI *search;
PropertyStrong MAMapView *_mapView;
@end

@implementation LocationMapViewController
- (id)initWithcoor:(CLLocationCoordinate2D )centerCoor
{
    self = [super init];
    if (self) {
        mapCenterCoor = centerCoor;
    }
    
    return self;
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title =  NaviTitle_ShopAddress;
    self.view.backgroundColor = WHITE_COLOR;
    
    
    UIButton *sureBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40, 18)];
    sureBtn.titleLabel.font = Font14;
    [sureBtn setTitle:AlertBtn_Save forState:UIControlStateNormal];
    [sureBtn setTitleColor:ColorWithHexString(ColorText_333333) forState:UIControlStateNormal];
    [sureBtn addTarget:self action:@selector(submitaddressinfo) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithCustomView:sureBtn];
    self.navigationItem.rightBarButtonItem = rightItem;
    
    
    UIView *searchView = [[UIView alloc] initWithFrame:CGRectMake(5, Start_Height+4, Screen_Width-80, 32)];
    searchView.backgroundColor = ColorWithHexString(ColorLine_ededed);
    [CreateView createImageViewWithFrame:CGRectMake(11, 9, 15, 15) image:ImageNamed(@"search") superView:searchView];
    [CreateView createLabelWithFrame:CGRectMake(37, 0, searchView.frame.size.width - 37, 32) text:@"搜索文案" fontSize:FontSize_11 textColorStr:ColorText_333333 superView:searchView];
    SetViewCorner(searchView, 10);
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(searchViewClicked)];
    [searchView addGestureRecognizer:tap];
    [self.view addSubview:searchView];
    
    
    UIButton *lookForBtn = [[UIButton alloc]initWithFrame:CGRectMake(Screen_Width-50, Start_Height, 40, 40)];
    [lookForBtn setImage:ImageNamed(@"dw_nav") forState:UIControlStateNormal];
    [lookForBtn setImage:ImageNamed(@"dw_nav") forState:UIControlStateHighlighted];
    [lookForBtn addTarget:self action:@selector(lookfor) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:lookForBtn];

    
    
    ///初始化地图
    self._mapView = [[MAMapView alloc] initWithFrame:CGRectMake(0, Start_Height+40, Screen_Width, ScreenHeight_WithoutBottomBar-40)];
    self._mapView.delegate = self;
    self._mapView.showsCompass = NO;
    self._mapView.zoomLevel = 17;
    [self.view addSubview:self._mapView];
    
//    //定位圈蓝色
//        MAUserLocationRepresentation *r = [[MAUserLocationRepresentation alloc] init];
//        r.locationDotBgColor = [UIColor clearColor];///定位点背景色
//        r.locationDotFillColor = [UIColor clearColor];///定位点蓝色圆点颜色
//        r.showsAccuracyRing = NO;
//        r.enablePulseAnnimation = NO;
//    //    r.image = ImageNamed(@"123");
//        [self._mapView updateUserLocationRepresentation:r];
    //定位
    self.locationManager = [[AMapLocationManager alloc] init];
    self.locationManager.delegate = self;
    self.locationManager.distanceFilter = 200;
    
    
    //地理编码
    self.search = [[AMapSearchAPI alloc] init];
    self.search.delegate = self;
    
    //判断经纬度是否合理
    NSString *latitude = [NSString stringWithFormat:@"%f",mapCenterCoor.latitude];
    addressLatitude = [latitude floatValue]==0?@"":latitude;
    
    NSString *longtude = [NSString stringWithFormat:@"%f",mapCenterCoor.longitude];
    addressLongitude = [longtude floatValue]==0?@"":longtude;
    
    
    if (![AvailableString(addressLatitude) isEqualToString:@""])
    {
        [self addpoinwith:mapCenterCoor];
        [self searchAddressWithcoor:mapCenterCoor];
    }else {
        [self.locationManager startUpdatingLocation];
    }
    
    
}

//跟随按钮
- (void)lookfor {
    if (![CommonUtil isStartLocation]) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:AlertMsg_NotLocation message:AlertMsg_QuitMsg preferredStyle:UIAlertControllerStyleAlert];
        
        NSMutableAttributedString *alertControllerMessageStr = [[NSMutableAttributedString alloc] initWithString:AlertMsg_QuitMsg];
        
        [alertControllerMessageStr addAttribute:NSFontAttributeName value:Font16 range:NSMakeRange(0, AlertMsg_QuitMsg.length)];
        [alert setValue:alertControllerMessageStr forKey:@"attributedMessage"];
        
        WeakSelf;
        UIAlertAction *cancleAction = [UIAlertAction actionWithTitle:AlertMsg_SearchAddress style:UIAlertActionStyleDestructive handler:^(UIAlertAction * _Nonnull action) {
            //跳转到搜索界面
            [weakSelf searchViewClicked];
           
        }];
        [cancleAction setValue:ColorWithHexString(ColorText_999999) forKey:@"_titleTextColor"];
        UIAlertAction *action = [UIAlertAction actionWithTitle:AlertBtn_Confirm style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action)
                                 {
                                     //跳转设置开启定位
                                     
                                     
                                 }];
        [alert addAction:cancleAction];
        [alert addAction:action];
        [self presentViewController:alert animated:YES completion:nil];
    }else {
        
        [self.locationManager startUpdatingLocation];
    }
    
}


#pragma mark - AMapLocationManagerDelegate
- (void)amapLocationManager:(AMapLocationManager *)manager didUpdateLocation:(CLLocation *)location
{
    //显示用户图层
    self._mapView.showsUserLocation = YES;
    self._mapView.userTrackingMode = MAUserTrackingModeFollow;// 定位跟随模式
    [self.locationManager stopUpdatingLocation];
    addressLatitude = [NSString stringWithFormat:@"%f",location.coordinate.latitude];
    addressLongitude = [NSString stringWithFormat:@"%f",location.coordinate.longitude];
    
    [self addpoinwith:location.coordinate];
    [self searchAddressWithcoor:location.coordinate];
}


//逆地理编码
- (void)searchAddressWithcoor:(CLLocationCoordinate2D)coor
{
    AMapReGeocodeSearchRequest *regeo = [[AMapReGeocodeSearchRequest alloc] init];
    regeo.location  = [AMapGeoPoint locationWithLatitude:coor.latitude longitude:coor.longitude];
    regeo.requireExtension = YES;
    [self.search AMapReGoecodeSearch:regeo];
}
//
/* 逆地理编码回调. */
- (void)onReGeocodeSearchDone:(AMapReGeocodeSearchRequest *)request response:(AMapReGeocodeSearchResponse *)response
{
    
    //编码成功
    if (response.regeocode != nil)
    {
        userDetailAddress = response.regeocode.formattedAddress;
        isOk = YES;
    }
}


- (void)addpoinwith:(CLLocationCoordinate2D)coor
{
    [self._mapView setCenterCoordinate:coor animated:YES];
    [self._mapView removeAnnotations:self._mapView.annotations];
    MAPointAnnotation *pointAnnotation = [[MAPointAnnotation alloc] init];
    pointAnnotation.coordinate = coor;
    pointAnnotation.title = userDetailAddress;
    [self._mapView addAnnotation:pointAnnotation];
    
}

//气泡的回调
- (MAAnnotationView *)mapView:(MAMapView *)mapView viewForAnnotation:(id <MAAnnotation>)annotation
{
    if ([annotation isKindOfClass:[MAUserLocation class]])
    {
        return nil;
    }
    
    if ([annotation isKindOfClass:[MAPointAnnotation class]])
    {
        static NSString *pointReuseIndentifier = @"pointReuseIndentifier";
        MAPinAnnotationView*annotationView = (MAPinAnnotationView*)[mapView dequeueReusableAnnotationViewWithIdentifier:pointReuseIndentifier];
        if (annotationView == nil)
        {
            annotationView = [[MAPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:pointReuseIndentifier];
        }
        annotationView.canShowCallout= YES;       //设置气泡可以弹出，默认为NO
        //        annotationView.animatesDrop = YES;        //设置标注动画显示，默认为NO
        annotationView.draggable = YES;        //设置标注可以拖动，默认为NO
        annotationView.pinColor = MAPinAnnotationColorPurple;
        return annotationView;
    }
    return nil;
}
- (void)mapView:(MAMapView *)mapView didSingleTappedAtCoordinate:(CLLocationCoordinate2D)coordinate {
    
    addressLatitude = [NSString stringWithFormat:@"%f",coordinate.latitude];
    addressLongitude = [NSString stringWithFormat:@"%f",coordinate.longitude];
    [self addpoinwith:coordinate];
    [self searchAddressWithcoor:coordinate];
}

- (void)submitaddressinfo{
    HideKeyBoard;
    if (!isOk) {
        [self showToast:LocationNoStop];
    }
    [OpenShopInfo shareInstance].shopLat = addressLatitude;
    [OpenShopInfo shareInstance].shopLong = addressLongitude;
    [OpenShopInfo shareInstance].shopAddress = userDetailAddress;
    [[OpenShopInfo shareInstance] writeToDefaults];
    [self showToast:SaveSuccess];
    [self performSelector:@selector(returnback) withObject:nil afterDelay:1.5];
    

}

- (void)returnback {
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)searchViewClicked {
    MapSearchViewController *search = [[MapSearchViewController alloc]init];
    [self.navigationController pushViewController:search animated:YES];
}


@end
