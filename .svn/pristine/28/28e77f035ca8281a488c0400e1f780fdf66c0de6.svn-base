//
//  ShopInfoViewController.m
//  XTWL_IOS_SHOP
//
//  Created by Zhaoyang on 2017/10/14.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "ShopInfoViewController.h"
#import "OpenShopInfo.h"
#import "UserInfo.h"
#import "DecideString.h"
#import "ShopGoodsTypeViewController.h"
#import "ShopQualityViewController.h"
#import "LocationMapViewController.h"
#import "OpenInfoRecordViewController.h"
@interface ShopInfoViewController ()<UITableViewDataSource,UITableViewDelegate,UITextFieldDelegate,ChooseAddressDelegate,UIScrollViewDelegate> {
    NSArray *titleArray;
    NSString *shopType;
    
    NSString *shopTypeName;//经营品类
    NSString *shopName;//店铺名称
    NSString *shoplat;//店铺坐标
    NSString *shopAddress;//店铺地址
    NSString *shopUserName;//联系人
    NSString *shopUserTel;//联系人电话
    NSString *shopDevType;//配送方式
}
PropertyStrong UITableView *shopInfoTable;
PropertyStrong UIScrollView *infoScrollView;

@end

@implementation ShopInfoViewController
-(instancetype)initWithShopType:(NSString *)shoptype {
    self = [super init];
    if (self) {
        shopType = shoptype;
    }
    return self;
}

-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.shopInfoTable reloadData];

    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = StoreInfo;

    titleArray = @[@[ShopGoodsTypeStr],@[ShopNameStr],@[ShopLaatStr,ShopAddressStr],@[ShopUserStr],@[ShopUserTelStr],@[ShopDevtypeStr]];
    
    self.infoScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next - 60)];
    self.infoScrollView.delegate = self;
    self.infoScrollView.showsVerticalScrollIndicator = NO;
    self.infoScrollView.showsHorizontalScrollIndicator = NO;
    [self.view addSubview:self.infoScrollView];
    
    
    [self initShopInfoTableView];
    [self initNextStep];
}
- (void)initNextStep {
    
    //左上角返回
 
    UIButton *leftBackBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    leftBackBtn.titleLabel.font = Font16;
    leftBackBtn.frame = CGRectMake(0, 0, 60, 40);
    [leftBackBtn setImage:ImageNamed(@"navi_back") forState:UIControlStateNormal];
    [leftBackBtn addTarget:self action:@selector(leftback) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *leftItem = [[UIBarButtonItem alloc] initWithCustomView:leftBackBtn];
    self.navigationItem.leftBarButtonItem = leftItem;
    
    UIBarButtonItem *nagetiveSpacer = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace
                                                                                   target:nil action:nil];
    nagetiveSpacer.width = -30;//这个值可以根据自己需要自己调整
    self.navigationItem.leftBarButtonItems = @[nagetiveSpacer, leftItem];
    
    
    UIButton *sureBtn = [[UIButton alloc]initWithFrame:CGRectMake(SpaceLeftRight, Screen_Height - 50, (Screen_Width-2*SpaceLeftRight), 43)];
    SetViewCorner(sureBtn, 5);

    [sureBtn setBackgroundColor:ColorWithHexString(Color_MainFFDA44)];
    sureBtn.titleLabel.font = Font16;
    [sureBtn setTitle:NextStep forState:UIControlStateNormal];
    [sureBtn setTitleColor:ColorWithHexString(ColorText_333333) forState:UIControlStateNormal];
    [sureBtn addTarget:self action:@selector(nextstep) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:sureBtn];
    
    self.infoScrollView.contentSize = CGSizeMake(Screen_Width, CGRectGetMaxY(self.shopInfoTable.frame)+15);
    
}
- (void)initShopInfoTableView {
    CGFloat height;
    if ([shopType isEqualToString:@"1"]) {
        height = 396;
    }else {
        height = 338;
    }
    
    self.shopInfoTable = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, Screen_Width, height) style:UITableViewStyleGrouped];
    self.shopInfoTable.scrollEnabled = NO;
    self.shopInfoTable.delegate = self;
    self.shopInfoTable.dataSource = self;
    [self.infoScrollView addSubview:self.shopInfoTable];
    
}
#pragma TableViewDelegate&&UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    if ([shopType isEqualToString:@"1"]) {
        return titleArray.count;
    }
    return titleArray.count - 1;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    NSArray *arr = titleArray[section];
    return arr.count;
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    return 48;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 10;
}
- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    return 0.1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        if (indexPath.section ==0 ||indexPath.section == 5) {
            cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
        }else {
            UITextField *text = [[UITextField alloc]initWithFrame:CGRectMake(90, 0, Screen_Width-100, 48)];
            [text addTarget:self action:@selector(textFieldChanged:) forControlEvents:UIControlEventEditingChanged];
            text.font = Font14;
            text.textColor = ColorWithHexString(ColorText_333333);
            text.delegate = self;
            text.textAlignment = NSTextAlignmentRight;
            text.tag = 100+indexPath.section;
            [cell.contentView addSubview:text];
            
            if (indexPath.section == 4) {
                text.keyboardType = UIKeyboardTypePhonePad;
            }
            
            if (indexPath.section == 2 && indexPath.row == 0) {
                UIButton *addMapBtn = [[UIButton alloc]initWithFrame:CGRectMake(Screen_Width-120, 0, 110, 48)];
                addMapBtn.tag = 200;
                addMapBtn.titleLabel.font = Font14;
                [addMapBtn setTitle:AddShopLatStr forState:UIControlStateNormal];
                [addMapBtn setImage:ImageNamed(@"wz_dh") forState:UIControlStateNormal];
                [addMapBtn setTitleColor:ColorWithHexString(ColorText_Blue34aeff) forState:UIControlStateNormal];
                [addMapBtn addTarget:self action:@selector(submitAddressInfo) forControlEvents:UIControlEventTouchUpInside];
                [cell.contentView addSubview:addMapBtn];
                text.hidden = YES;
            }else {
                text.hidden = NO;
            }
            
            
        }
    }
    UITextField *infotext =(UITextField *)[cell.contentView viewWithTag:100+indexPath.section];
    UIButton *addMapBtn =(UIButton *)[cell.contentView viewWithTag:200];
    cell.textLabel.text = titleArray[indexPath.section][indexPath.row];
    cell.textLabel.textColor = ColorWithHexString(ColorText_333333);
    cell.textLabel.font = Font14;
    if (indexPath.section == 0) {
        if (![AvailableString([OpenShopInfo shareInstance].shopTypeName) isEqualToString:@""]) {
            NSMutableArray *goodsCopyArr = [[OpenShopInfo shareInstance].SecsupTypeNmaeArr mutableCopy];

            
            NSString *string = [goodsCopyArr componentsJoinedByString:@","];
            

            cell.textLabel.text = [NSString stringWithFormat:@"%@----%@",AvailableString([OpenShopInfo shareInstance].shopTypeName),string];
            cell.textLabel.textColor = ColorWithHexString(ColorText_606060);
        }

    }else if (indexPath.section == 1) {
        infotext.placeholder = InputShopName;
        infotext.text = AvailableString([OpenShopInfo shareInstance].shopName);
    }else if (indexPath.section == 2) {
        if (indexPath.row == 0) {
            addMapBtn.hidden = NO;
            infotext.hidden = YES;
            
        }else{
            infotext.placeholder = InputShopAddress;
            infotext.tag = 1000;
            infotext.text = AvailableString([OpenShopInfo shareInstance].shopAddress);
        }
    }else if (indexPath.section == 3) {
        infotext.placeholder = InputShopUser;
        infotext.text = AvailableString([OpenShopInfo shareInstance].shopUserName);
    }else if (indexPath.section == 4) {
        infotext.placeholder = InputShopUserTel;
        if ([AvailableString([OpenShopInfo shareInstance].shopUserTel) isEqualToString:@""]) {
            infotext.text = AvailableString([UserInfo shareInstance].userAccount);
        }else {
            infotext.text = AvailableString([OpenShopInfo shareInstance].shopUserTel);
        }
        infotext.textColor = ColorWithHexString(ColorText_999999);
        
        
    }else {
        cell.detailTextLabel.textColor = ColorWithHexString(ColorText_606060);
        cell.detailTextLabel.font = Font14;
        if ([AvailableString([OpenShopInfo shareInstance].shopDeliveryType) isEqualToString:@""]) {
            cell.detailTextLabel.text = DevtypeStr;
        }else {
            cell.detailTextLabel.text = AvailableString([OpenShopInfo shareInstance].shopDeliveryType);
        }
        
    }
    
    
    
    
    
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        ShopGoodsTypeViewController *shshsh = [[ShopGoodsTypeViewController alloc]init];
        [self.navigationController pushViewController:shshsh animated:YES];
    }else if (indexPath.section == 2){
        if (indexPath.row == 0) {
            if (![AvailableString([OpenShopInfo shareInstance].shopLat) isEqualToString:@""]) {
                CLLocationCoordinate2D coor = {[[OpenShopInfo shareInstance].shopLat floatValue],[[OpenShopInfo shareInstance].shopLong floatValue]};
                LocationMapViewController *loca = [[LocationMapViewController alloc]initWithcoor:coor];
                [self.navigationController pushViewController:loca animated:YES];
            }
        }
    }
    
    if (indexPath.section == 5) {
        UIAlertController *alertController = [UIAlertController alertControllerWithTitle:ChooseDevtypeStr message:@"" preferredStyle: UIAlertControllerStyleActionSheet];
        UIAlertAction *cancelAction = [UIAlertAction actionWithTitle:AlertBtn_Cancle style:UIAlertActionStyleCancel handler:nil];
        
        UIAlertAction *DevtypeAction = [UIAlertAction actionWithTitle:DevtypeStr style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {

            [OpenShopInfo shareInstance].shopDeliveryType = DevtypeStr;
            NSIndexPath *indexPath=[NSIndexPath indexPathForRow:0 inSection:5];
            
            [self.shopInfoTable reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath,nil] withRowAnimation:UITableViewRowAnimationNone];
            
        }];
        UIAlertAction *archiveAction = [UIAlertAction actionWithTitle:OwnDevtypeStr style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            
            [OpenShopInfo shareInstance].shopDeliveryType = OwnDevtypeStr;
            NSIndexPath *indexPath=[NSIndexPath indexPathForRow:0 inSection:5];
            
            [self.shopInfoTable reloadRowsAtIndexPaths:[NSArray arrayWithObjects:indexPath,nil] withRowAnimation:UITableViewRowAnimationNone];
            
        }];
        [alertController addAction:cancelAction];
        [alertController addAction:DevtypeAction];
        [alertController addAction:archiveAction];
        [self presentViewController:alertController animated:YES completion:nil];
        
    }
}
//添加店铺地址
-(void)submitAddressInfo{
    LocationMapViewController *loca = [[LocationMapViewController alloc]init];
    [self.navigationController pushViewController:loca animated:YES];
}



#pragma mark - UITextFieldDelegate
- (void)textFieldDidEndEditing:(UITextField *)textField {
    switch (textField.tag) {
        case 101:
            [OpenShopInfo shareInstance].shopName = textField.text;
            break;
        case 1000:
            [OpenShopInfo shareInstance].shopAddress = textField.text;
            break;
        case 103:
            [OpenShopInfo shareInstance].shopUserName = textField.text;
            break;
        case 104:
            [OpenShopInfo shareInstance].shopUserTel = textField.text;
            break;
            
        default:
            break;
    }
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    //判断 限制长度
    NSString *allText = StringFromIdToId(textField.text, string);
    
    switch (textField.tag) {
            
        case 104:
        {//电话
            if ([allText length]>15) {
                return NO;
            }
        }
            break;
            
        default:
            break;
    }
    
    return YES;
}



//检测联系人和店铺地址，店铺名称的输入情况
- (void)textFieldChanged:(UITextField *)textField
{
    
    NSString *toBeString = textField.text;
    
    //获取高亮部分
    UITextRange *selectedRange = [textField markedTextRange];
    UITextPosition *position = [textField positionFromPosition:selectedRange.start offset:0];
    if (textField.tag == 101) {
        // 没有高亮选择的字，则对已输入的文字进行字数统计和限制
        if (!position)
        {
            if (toBeString.length > MAX_AddressCode_LENGTH)
            {
                NSRange rangeIndex = [toBeString rangeOfComposedCharacterSequenceAtIndex:MAX_AddressCode_LENGTH];
                if (rangeIndex.length == 1)
                {
                    textField.text = [toBeString substringToIndex:MAX_AddressCode_LENGTH];
                }
                else
                {
                    NSRange rangeRange = [toBeString rangeOfComposedCharacterSequencesForRange:NSMakeRange(0, MAX_AddressCode_LENGTH)];
                    textField.text = [toBeString substringWithRange:rangeRange];
                }
            }
        }
    }else if (textField.tag == 1000) {
        if (!position)
        {
            if (toBeString.length > MAX_ShopAddress_LENGTH)
            {
                NSRange rangeIndex = [toBeString rangeOfComposedCharacterSequenceAtIndex:MAX_ShopAddress_LENGTH];
                if (rangeIndex.length == 1)
                {
                    textField.text = [toBeString substringToIndex:MAX_ShopAddress_LENGTH];
                }
                else
                {
                    NSRange rangeRange = [toBeString rangeOfComposedCharacterSequencesForRange:NSMakeRange(0, MAX_ShopAddress_LENGTH)];
                    textField.text = [toBeString substringWithRange:rangeRange];
                }
            }
        }
    }else if (textField.tag == 103) {
        if (!position)
        {
            if (toBeString.length > MAX_ShopUser_LENGTH)
            {
                NSRange rangeIndex = [toBeString rangeOfComposedCharacterSequenceAtIndex:MAX_ShopUser_LENGTH];
                if (rangeIndex.length == 1)
                {
                    textField.text = [toBeString substringToIndex:MAX_ShopUser_LENGTH];
                }
                else
                {
                    NSRange rangeRange = [toBeString rangeOfComposedCharacterSequencesForRange:NSMakeRange(0, MAX_ShopUser_LENGTH)];
                    textField.text = [toBeString substringWithRange:rangeRange];
                }
            }
        }
    }

    
}



- (BOOL)textFieldShouldReturn:(UITextField *)theTextField {
    [theTextField resignFirstResponder];
    return YES;
}

//判断是否能保存 店铺信息所有项都是必填
- (BOOL)canSave {
    if ([AvailableString([OpenShopInfo shareInstance].shopTypeName) isEqualToString:@""]) {
        [self showToast:ShopGoodsTypeStr];
        return NO;
    }
    if ([AvailableString([OpenShopInfo shareInstance].shopName) isEqualToString:@""]) {
        [self showToast:InputShopName];
        return NO;
    }
    //    if ([AvailableString([OpenShopInfo shareInstance].shopLat) isEqualToString:@""]) {
    //        [self showToast:@"请添加地图坐标"];
    //        return NO;
    //    }
    //    if ([AvailableString([OpenShopInfo shareInstance].shopAddress) isEqualToString:@""]) {
    //        [self showToast:@"填写店铺地址"];
    //        return NO;
    //    }
    
    
    if ([AvailableString([OpenShopInfo shareInstance].shopUserName) isEqualToString:@""]) {
        [self showToast:InputShopUser];
        return NO;
    }
    if ([AvailableString([OpenShopInfo shareInstance].shopUserTel) isEqualToString:@""]) {
        [self showToast:InputShopUserTel];
        return NO;
    }
    
    return YES;
}



//下一步
- (void)nextstep {
    HideKeyBoard;
    if ([shopType isEqualToString:@"1"]) {
        if ([AvailableString([OpenShopInfo shareInstance].shopDeliveryType) isEqualToString:@""]) {
            [OpenShopInfo shareInstance].shopDeliveryType = DevtypeStr;
        }
    }
    
    if ([self canSave]) {
        
        [OpenShopInfo shareInstance].shopInfoProgress = 2;
        [[OpenShopInfo shareInstance] writeToDefaults];
        ShopQualityViewController *shop = [[ShopQualityViewController alloc]init];
        [self.navigationController pushViewController:shop animated:YES];

        
        
    }
    
    
    
}



//右上角保存
- (void)save {
    HideKeyBoard;
    if ([shopType isEqualToString:@"1"]) {
        if ([AvailableString([OpenShopInfo shareInstance].shopDeliveryType) isEqualToString:@""]) {
            [OpenShopInfo shareInstance].shopDeliveryType = DevtypeStr;
        }
    }
    if ([self canSave]) {
        
        [OpenShopInfo shareInstance].shopInfoProgress = 2;
        [[OpenShopInfo shareInstance] writeToDefaults];
        [self showToast:SaveSuccess];
        [self performSelector:@selector(returnback) withObject:nil afterDelay:1.5];
        

    }
   
}

- (void)leftback {
    //有信息填写了弹窗提示保存
    HideKeyBoard;
    if ([self canSave]) {
        UIAlertController *alert = [UIAlertController alertControllerWithTitle:@"" message:AlertMsg_IsSaveInfo preferredStyle:UIAlertControllerStyleAlert];
        
        UIAlertAction *saveaction = [UIAlertAction actionWithTitle:AlertBtn_Save style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            
            [self save];
            
        }];
        
        
        UIAlertAction *action = [UIAlertAction actionWithTitle:AlertBtn_NoSave style:UIAlertActionStyleDefault handler:^(UIAlertAction * _Nonnull action) {
            [self returnback];
        }];
        [alert addAction:action];
        [alert addAction:saveaction];
        [self presentViewController:alert animated:YES completion:nil];
    }else {
        [self.navigationController popViewControllerAnimated:YES];
    }
    
    
    
}

- (void)returnback {
    [self.navigationController popViewControllerAnimated:YES];
}


@end
