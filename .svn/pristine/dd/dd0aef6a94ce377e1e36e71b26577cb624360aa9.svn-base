//
//  SelectPictureViewController.m
//  XTWL_IOS_SHOP
//
//  Created by Cinna on 2017/10/30.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "SelectPictureViewController.h"
#import "PictureCell.h"
#import "FGalleryViewController.h"
#import "GoodsAddOrEditViewController.h"

#define CollectionViewNum 4.0

@interface SelectPictureViewController () <UICollectionViewDelegate, UICollectionViewDataSource, FGalleryViewControllerDelegate>

@end

@implementation SelectPictureViewController {
    UICollectionView *collectionView;
    NSMutableArray *pictureArray;
    UIAlertController *alert;
    SelectedPicBlock selectedPicBlock;
    PictureCategoryModel *pictureCategoryModel;
    FGalleryViewController *fGalleryVC;
}

- (instancetype)initWithPictureCategoryModel:(PictureCategoryModel *)model completeBlock:(SelectedPicBlock)block {
    self = [super init];
    if (self) {
        selectedPicBlock = block;
        pictureCategoryModel = model;
    }
    return self;
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
}

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    self.navigationItem.title = NaviTitle_GoodsGuige;
    
    [self sendRequestToGetPictures];
    
    [self initSubviews];
}

- (void)initSubviews {
    
    UICollectionViewFlowLayout *layout = [[UICollectionViewFlowLayout alloc] init];
    layout.itemSize = CGSizeMake(Screen_Width/CollectionViewNum, Screen_Width/CollectionViewNum);
    layout.minimumInteritemSpacing = 0;
    layout.minimumLineSpacing = 0;
    
    collectionView = [[UICollectionView alloc] initWithFrame:CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next) collectionViewLayout:layout];
    [collectionView registerClass:[PictureCell class] forCellWithReuseIdentifier:@"PictureCell"];
    collectionView.backgroundColor = WHITE_COLOR;
    collectionView.delegate = self;
    collectionView.dataSource = self;
    [self.view addSubview:collectionView];
    
}

- (void)save {
    NSString *url = pictureArray[fGalleryVC.currentIndex];
    if (selectedPicBlock) {
        selectedPicBlock(url);
    }
    for (UIViewController *vc in self.navigationController.viewControllers) {
        if ([vc isKindOfClass:[GoodsAddOrEditViewController class]]) {
            [self.navigationController popToViewController:vc animated:YES];
            return;
        }
    }
}

#pragma mark - UICollectionViewDelegate && DataSource
- (NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView {
    return ceilf(pictureArray.count/CollectionViewNum);
}

- (NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section {
    return pictureArray.count - section * CollectionViewNum;
}

- (UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath {
    
    PictureCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@"PictureCell" forIndexPath:indexPath];
    NSInteger i = indexPath.section * (NSInteger)CollectionViewNum + indexPath.row;
    [cell.imageView sd_setImageWithURLStr:pictureArray[i] placeholderImage:DefaultImage1 imageWidth:Screen_Width/CollectionViewNum imageHeight:Screen_Width/CollectionViewNum];
    return cell;
    
}

- (void)collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath {
    fGalleryVC = [[FGalleryViewController alloc] initWithPhotoSource:self];
    fGalleryVC.startingIndex = indexPath.row;
    fGalleryVC.tag = indexPath.row;
    [self.navigationController pushViewController:fGalleryVC animated:YES];
    
    UIButton *btn = [CreateView createCustomBtnWithFrame:CGRectMake(SpaceLeftRight, ScreenHeight_WithoutBottomBar - SpaceLeftRight - 40, Screen_Width - SpaceLeftRight * 2, 40) title:AlertBtn_Save image:nil titleColorStr:ColorText_606060 fontSize:FontSize_14 superView:fGalleryVC.view];
    [btn setBackgroundColor:ColorWithHexString(Color_MainFFDA44)];
    [btn addTarget:self action:@selector(save) forControlEvents:UIControlEventTouchUpInside];
}

#pragma mark - FGalleryViewControllerDelegate
//scroll 中图片的个数
- (NSInteger)numberOfPhotosForPhotoGallery:(FGalleryViewController *)gallery
{
    return [pictureArray count];
}

//类型 本地图片 或 网络
- (FGalleryPhotoSourceType)photoGallery:(FGalleryViewController *)gallery sourceTypeForPhotoAtIndex:(NSUInteger)index
{
    return FGalleryPhotoSourceTypeNetwork;
}

//图片url string
- (NSString*)photoGallery:(FGalleryViewController *)gallery urlForPhotoSize:(FGalleryPhotoSize)size atIndex:(NSUInteger)index {
    
    return [NSString stringWithFormat:@"%@?w=%f&h=%f",pictureArray[index],Screen_Width/CollectionViewNum,Screen_Width/CollectionViewNum];
}

#pragma mark - 接口请求
- (void)sendRequestToGetPictures{
    ShowProcessHud;
    WeakSelf;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setValue:@"5CBEC20BE66017E2E053C208A8C09FAD" forKey:@"classId"];
//    [dic setValue:pictureCategoryModel.parentId forKey:@"classId"];
    [dic setValue:@"1" forKey:@"page"];
    [RequestManager sendPostRequestWithURLString:ServerUrl_Read modular:Modular_picture requestName:RequestName_querySelectPicListForApp parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        HideProcessHud;
        if ([resultCode isEqualToString:@"0"]) {
            pictureArray = [NSMutableArray arrayWithArray:[dataDic objectForKey:@"list"]];
            [collectionView reloadData];
        }else {
            [weakSelf showToast:resultDesc];
        }
    } failedBlock:^(NSError *error) {
        HideProcessHud;
        [weakSelf showToast:ToastMsg_NetworkFailed];
    }];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
