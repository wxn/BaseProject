//
//  ChooseBankViewController.m
//  XTWL_IOS_SHOP
//
//  Created by Zhaoyang on 2017/10/20.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "ChooseBankViewController.h"


@interface ChooseBankViewController ()<UITableViewDelegate,UITableViewDataSource,UITextFieldDelegate>{
    int page;
    NSString *province;
    NSString *city;
    NSString *area;
    NSString *headBank;
    NSString *branchBank;
    NSString *searchStr;

}


PropertyStrong NSMutableArray *infoarr;
PropertyStrong NSMutableArray *bankInfoArr;
PropertyStrong UITableView *bankTableView;

@end

@implementation ChooseBankViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = @"开户行";
    self.infoarr = [[NSMutableArray alloc]initWithCapacity:0];
    self.bankInfoArr = [[NSMutableArray alloc]initWithCapacity:0];
    page = 1;
    self.bankTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next) style:UITableViewStyleGrouped];
    self.bankTableView.delegate = self;
    self.bankTableView.dataSource = self;
//    self.bankTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:self.bankTableView];
    
    [self sendRequestToGetBankInfo];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 2;
}


- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section == 0) {
        if (page >= 4
            ) {
            return 2;
        }else {
            return 0;
        }
        
    }
    if (page >= 4) {
        return self.infoarr.count;
    }
    return self.bankInfoArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 50;
}
-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 0) {
        if (page >= 4) {
            return 10;
        }else {
            return 0.1;
        }
        
    }
    return 0.1;
}
-(CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 0.1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (indexPath.section == 0) {
        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
        if (!cell) {
            cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cell"];

            UITextField *infotext = [[UITextField alloc]initWithFrame:CGRectMake(0, 0, Screen_Width, 49)];
            infotext.delegate = self;
            infotext.textAlignment = NSTextAlignmentLeft;
            infotext.tag = 100;
            infotext.borderStyle =   UITextBorderStyleNone;
            infotext.textColor = ColorWithHexString(ColorText_333333);
            infotext.font = Font(FontSize_14);

            [infotext setValue:Font(FontSize_14) forKeyPath:@"_placeholderLabel.font"];
            [infotext setValue:ColorWithHexString(ColorText_dadada) forKeyPath:@"_placeholderLabel.textColor"];
            [cell.contentView addSubview:infotext];
            
            UIView *linewview = [[UIView alloc]initWithFrame:CGRectMake(SpaceLeftRight, 49.5, Screen_Width-SpaceLeftRight, 0.5)];
            linewview.tag = 200;
            linewview.backgroundColor = ColorWithHexString(ColorLine_ededed);
            [cell.contentView addSubview:linewview];
        }
        UITextField *infotext = (UITextField *)[cell.contentView viewWithTag:100];
        UIView *linewview = (UIView *)[cell.contentView viewWithTag:200];
        if (indexPath.row == 0) {
            infotext.hidden = YES;
            cell.textLabel.text = [NSString stringWithFormat:@"%@,%@,%@",province,city,area];
        }else {
            infotext.hidden = NO;
            linewview.hidden = YES;
        }
        
        return cell;
    }
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"cellid"];
    if (!cell) {
        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleValue1 reuseIdentifier:@"cellid"];
        
    }
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    if (page >= 4) {
        cell.textLabel.text = self.infoarr[indexPath.row];
    }else {
        cell.textLabel.text = self.bankInfoArr[indexPath.row];
    }
    
    return cell;
}

#pragma mark - UISearchBarDelegate

#pragma mark - UITextFieldDelegate
- (void)textFieldDidEndEditing:(UITextField *)textField {
    switch (textField.tag) {
        case 100:
            searchStr = textField.text;
            break;
        default:
            break;
    }
    
    if ([searchStr isEqualToString:@""]) {
        [self sendRequestToGetBankInfo];
    }else {
        [self.infoarr removeAllObjects];
        for (int i = 0; i<self.infoarr.count; i++) {
            NSMutableDictionary *dic = self.infoarr[i];
            NSString *str;
            if (page == 4) {
                str = @"headBank";
            }else if (page == 5){
                str = @"branchBank";
            }
            NSRange rang = [dic[str] rangeOfString:searchStr];
            if (rang.location != NSNotFound) {
                [self.infoarr addObject:dic[str]];
            }
            
        }
        [self.bankTableView reloadData];
    }

}






- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    page ++;
    if (page == 2) {
        province = self.bankInfoArr[indexPath.row];
        [self sendRequestToGetBankInfo];
    }else if (page == 3){
        city = self.bankInfoArr[indexPath.row];
        [self sendRequestToGetBankInfo];
    }else if (page == 4) {
        area = self.bankInfoArr[indexPath.row];
        [self sendRequestToGetBankInfo];
    }else if (page == 5) {
        if (indexPath.section == 1) {
            headBank = self.bankInfoArr[indexPath.row];
            [self sendRequestToGetBankInfo];
        }
    }else {
        //        if (indexPath.section == 1) {
        //            branchBank = self.bankInfoArr[indexPath.row];
        //            [self sendRequestToGetBankInfo];
        //        }
        //
        
    }
    
    
    
}





- (BOOL)textFieldShouldReturn:(UITextField *)theTextField {
    [theTextField resignFirstResponder];
    
    
    return YES;
    
}

- (void)finish{
    
    [self.bankTableView reloadData];
}

- (void)sendRequestToGetBankInfo {

    WeakSelf;
    NSMutableDictionary *dic = [[NSMutableDictionary alloc]init];
    [dic setValue:[NSString stringWithFormat:@"%d",page]  forKey:@"flag"];
    if (page == 2) {
         [dic setValue:AvailableString(province)  forKey:@"province"];
    }else if (page == 3) {
        [dic setValue:AvailableString(city)  forKey:@"city"];
    }else if (page == 4) {
        [dic setValue:AvailableString(area)  forKey:@"area"];
    }else {
         [dic setValue:AvailableString(headBank)  forKey:@"headBank"];
    }
//

   


    [RequestManager sendPostRequestWithURLString:ServerUrl_Read modular:Modular_readShop requestName:RequestName_queryBanklist parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic)
     {
         
         if ([resultCode isEqualToString:@"0"])
         {
             
             
             NSLog(@"dic  %@",dataDic);
             [self.infoarr removeAllObjects];
             [self.bankInfoArr removeAllObjects];
             if (page == 1) {
                 for (int i =0; i<[dataDic[@"list"] count]; i++) {
                     NSMutableDictionary *dic = dataDic[@"list"][i];
                     [self.bankInfoArr addObject:dic[@"province"]];
                 }
             }
             
             if (page == 2) {
                 for (int i =0; i<[dataDic[@"list"] count]; i++) {
                     NSMutableDictionary *dic = dataDic[@"list"][i];
                     [self.bankInfoArr addObject:dic[@"city"]];
                 }
             }
             
             if (page == 3) {
                 for (int i =0; i<[dataDic[@"list"] count]; i++) {
                     NSMutableDictionary *dic = dataDic[@"list"][i];
                     [self.bankInfoArr addObject:dic[@"area"]];
                 }
             }
             
             if (page == 4) {
                 for (int i =0; i<[dataDic[@"list"] count]; i++) {
                     NSMutableDictionary *dic = dataDic[@"list"][i];
                     [self.infoarr addObject:dic[@"headBank"]];
                 }
                 
             }
             
             if (page == 5) {
                 for (int i =0; i<[dataDic[@"list"] count]; i++) {
                     NSMutableDictionary *dic = dataDic[@"list"][i];
                     [self.infoarr addObject:dic[@"branchBank"]];
                 }
             }
             
         }else {
             [weakSelf showToast:resultDesc];
         }
         [weakSelf finish];
     } failedBlock:^(NSError *error) {
         [weakSelf showToast:ToastMsg_NetworkFailed];
     }];

}


@end
