//
//  GoodsAddOrEditViewController.m
//  XTWL_IOS_SHOP
//
//  Created by 开发003 on 2017/10/25.
//  Copyright © 2017年 XTWL. All rights reserved.
//

#import "GoodsAddOrEditViewController.h"
#import "GoodsInfo.h"
#import "TitleTextCell.h"
#import "GoodsSkuCell.h"
#import "GoodsEditPropertyCell.h"
#import "TitleImageBtn.h"
#import "SetCategoryViewController.h"
#import "GoodsDetailInfo.h"
#import "GoodsPropertyModel.h"
#import "CategoryModel.h"
#import "SelectGuigeViewController.h"
#import "GoodsPropertyDescModel.h"
#import "SelectCategoryViewController.h"
#import "SelectPictureCategoryViewController.h"


@interface GoodsAddOrEditViewController ()<UITableViewDelegate, UITableViewDataSource, UITextFieldDelegate, UITextViewDelegate, UIActionSheetDelegate, UIImagePickerControllerDelegate>

PropertyAssign GoodsChangeType myType; // 上传商品或者编辑商品
PropertyCopy NSString *goodsId;
PropertyCopy BackBlock backBlock;

PropertyStrong UITableView *goodsInfoTable;// 商品信息列表展示

PropertyStrong UIView *headerView;
PropertyStrong UIButton *recommandButton;
PropertyStrong UIImageView *photoView; // 照片选取
//PropertyStrong TitleImageBtn *addPhotoBtn;// 添加照片的button;
PropertyStrong UIImageView *addPhotoView;// 添加图片
PropertyStrong UIView *reSetImageTapView;// 重新设置图片
// 商品相关信息
PropertyStrong GoodsCategoryInfo *categoryInfo;// 商品分类信息
PropertyCopy NSString *goodsName;// 商品名称
PropertyCopy NSString *goodsPrice;// 价格
PropertyCopy NSString *goodsStock;// 库存
PropertyStrong NSMutableArray *goodsSkuArray;// 商品规格
PropertyStrong NSMutableArray *goodsPropertyArray;// 商品属性
PropertyCopy NSString *boxPrice;// 打包盒价格
PropertyCopy NSString *goodsDesc;// 商品说明
PropertyAssign NSInteger isRecommend;

// 原始商品信息
PropertyCopy NSString *goodsPicture;// 图片
PropertyStrong GoodsCategoryInfo *oldCategoryInfo;// 商品分类信息
PropertyCopy NSString *oldGoodsName;// 商品名称
PropertyCopy NSString *oldGoodsPrice;// 价格
PropertyCopy NSString *oldGoodsStock;// 库存
PropertyStrong NSMutableArray *oldGoodsSkuArray;// 商品规格
PropertyStrong NSMutableArray *oldGoodsPropertyArray;// 商品属性
PropertyCopy NSString *oldBoxPrice;// 打包盒价格
PropertyCopy NSString *oldGoodsDesc;// 商品说明
PropertyAssign NSInteger oldIsRecommend;

//PropertyStrong GoodsDetailInfo *goodsDetailInfo;
PropertyAssign NSInteger selectPropertyIndex;

PropertyAssign BOOL isShowPicture;// 是否已有图片在展示

PropertyAssign BOOL isSelectedImage;// 图片是否已选取
PropertyAssign BOOL isChoosedCatogory;// 是否选择分类

PropertyAssign BOOL isPictureChanged;// 图片是否已被替换
PropertyAssign BOOL isGetImageUrl;// 是否获取到图片url
PropertyCopy NSString *pictureUrl;

PropertyAssign BOOL isSkuChanged;// sku发生变化
PropertyAssign BOOL isPropertyChanged;// 属性发生变化

// 隐藏键盘的视图
PropertyStrong UIView *hideKeyBoardView;
PropertyAssign BOOL isKeyBoardHidden;

@end

@implementation GoodsAddOrEditViewController

- (instancetype)initWithGoodsChangeType:(GoodsChangeType)type goodsId:(NSString *)goodsId completeBlock:(BackBlock)block
{
    self = [super init];
    if (self) {
        _myType = type;
        self.goodsId = goodsId;
        _backBlock = block;
    }
    return self;
}

- (void)viewWillAppear:(BOOL)animated {
    
    [super viewWillAppear:animated];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillChangeFrame:)
                                                 name:UIKeyboardWillChangeFrameNotification
                                               object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(keyboardWillHide:)
                                                 name:UIKeyboardWillHideNotification
                                               object:nil];
}

- (void)viewWillDisappear:(BOOL)animated {
    
    [super viewWillDisappear:animated];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillChangeFrameNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:UIKeyboardWillHideNotification object:nil];
    
}


- (void)viewDidLoad {
    [super viewDidLoad];
    
    _goodsSkuArray = [NSMutableArray array];
    _goodsPropertyArray = [NSMutableArray array];
    _categoryInfo = [[GoodsCategoryInfo alloc] init];
    _oldCategoryInfo = [[GoodsCategoryInfo alloc] init];
    
    if (_myType == GoodsChangeTypeAdd) {
        self.title = UpLoadGoods;
        [self createSubViews];
    }else {
        self.title = EditGoods;
        [self sendRequestToGetGoodsInfoWithGoodsId:_goodsId];
    }
    
    
    
    
    [self createHideKeyBoardView];
    
}

- (void)createSubViews {
    
    self.goodsInfoTable = [[UITableView alloc] initWithFrame:CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next - 48) style:(UITableViewStyleGrouped)];
    _goodsInfoTable.dataSource = self;
    _goodsInfoTable.delegate = self;
    _goodsInfoTable.separatorColor = CLEAR_COLOR;
    _goodsInfoTable.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.view addSubview:_goodsInfoTable];
    
    [_goodsInfoTable registerClass:[TitleTextCell class] forCellReuseIdentifier:@"titleTextCell"];
    [_goodsInfoTable registerClass:[GoodsSkuCell class] forCellReuseIdentifier:@"goodsSkuCell"];
    [_goodsInfoTable registerClass:[GoodsEditPropertyCell class] forCellReuseIdentifier:@"goodsEditPropertyCell"];
    
    self.headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, (Screen_Width - 60)*0.6 + 60)];
    _headerView.backgroundColor = WHITE_COLOR;
    
    UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(0, 15, 3, 15)];
    lineView.backgroundColor = ColorWithHexString(Color_MainFFDA44);
    [_headerView addSubview:lineView];
    
    [CreateView createLabelWithFrame:CGRectMake(SpaceLeftRight, lineView.frame.origin.y, 100, 15) text:BaseInfo fontSize:FontSize_14 textColorStr:ColorText_333333 superView:_headerView];
    
//    self.recommandButton = [[UIButton alloc] initWithFrame:CGRectMake(Screen_Width - 60, 5, 45, 35)];
//    [_recommandButton setTitleColor:ColorWithHexString(Color_PriceFF2622) forState:(UIControlStateNormal)];
//    [_recommandButton setTitle:@"店长推荐" forState:(UIControlStateNormal)];
//    _recommandButton.titleLabel.font = Font11;
//    [_headerView addSubview:_recommandButton];
    
    self.photoView = [[UIImageView alloc] initWithFrame:CGRectMake(30, 45, Screen_Width - 60, (Screen_Width - 60)*0.6)];
    _photoView.userInteractionEnabled = YES;
    [_headerView addSubview:_photoView];
    
//    self.addPhotoBtn = [[TitleImageBtn alloc] initWithFrame:CGRectMake(0, 0, 60, 65) title:@"添加图片" titleColor:ColorWithHexString(ColorText_606060) imageUrlStr:nil imageName:@"" imageWidth:40 topHeight:0 titleHeight:FontSize_14 titleTop:11];
//    [_addPhotoBtn addTarget:self action:@selector(addPhotoBtnAction) forControlEvents:(UIControlEventTouchUpInside)];
//    
//    _addPhotoBtn.center = _photoView.center;
    self.addPhotoView = [CreateView createImageViewWithFrame:_photoView.bounds image:ImageNamed(@"goods_sptp") superView:_photoView];
    _addPhotoView.userInteractionEnabled = YES;
    UITapGestureRecognizer *addTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(addPhotoBtnAction)];
    [_addPhotoView addGestureRecognizer:addTap];
    
    
    self.reSetImageTapView = [[UIView alloc] initWithFrame:CGRectMake(0, _photoView.frame.size.height - 40, _photoView.frame.size.width, 40)];
    _reSetImageTapView.backgroundColor = [[UIColor blackColor] colorWithAlphaComponent:0.6];
    [_photoView addSubview:_reSetImageTapView];
    
    
    UILabel *reSetImageLabel = [CreateView createLabelWithFrame:_reSetImageTapView.bounds text:ClickToChangePic fontSize:FontSize_16 textColorStr:nil superView:_reSetImageTapView];
    reSetImageLabel.userInteractionEnabled = YES;
    reSetImageLabel.textColor = WHITE_COLOR;
    reSetImageLabel.textAlignment = NSTextAlignmentCenter;
    [_reSetImageTapView addSubview:reSetImageLabel];
    UITapGestureRecognizer *resetTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(addPhotoBtnAction)];
    [reSetImageLabel addGestureRecognizer:resetTap];
    
    _reSetImageTapView.hidden = YES;
    if (_myType == GoodsChangeTypeAdd) {
        _goodsInfoTable.tableHeaderView = _headerView;
    }else {
        [self reLoadHeaderViewFrameWithState:YES];
    }
    
    
    
    UIView *footerView = [[UIView alloc] initWithFrame:CGRectMake(0, ScreenHeight_WithoutBottomBar - 48, Screen_Width, 48)];
    footerView.backgroundColor = WHITE_COLOR;
//    UIView *topLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 10)];
//    topLineView.backgroundColor = ColorWithHexString(Color_BackgroundF2F2F2);
//    [footerView addSubview:topLineView];
    
    UIButton *saveButton = [[UIButton alloc] initWithFrame:CGRectMake(SpaceLeftRight, 3, Screen_Width - 30, 42)];
    saveButton.layer.cornerRadius = CornerRadius_3;
    saveButton.layer.masksToBounds = YES;
    [saveButton setBackgroundColor:ColorWithHexString(Color_MainFFDA44)];
    [saveButton setTitleColor:ColorWithHexString(ColorText_333333) forState:(UIControlStateNormal)];
    [saveButton setTitle:AlertBtn_Save forState:(UIControlStateNormal)];
    [footerView addSubview:saveButton];
    
    [saveButton addTarget:self action:@selector(saveButtonAction:) forControlEvents:(UIControlEventTouchUpInside)];
    
    [self.view addSubview:footerView];
    
    
    
}

- (void)saveButtonAction:(UIButton *)sender {
    
    if (self.myType == GoodsChangeTypeAdd) {
        
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        
        // 判断是否添加图片
        if (_isSelectedImage || _isGetImageUrl) {
            
        }else {
            [self showToast:@"请添加图片"];
            return;
        }
        
        // 判断是否已选择分类
        if (_isChoosedCatogory) {
            [dic setValue:_categoryInfo.typeId forKey:@"typeId"];
        }else {
            [self showToast:@"请选择商品分类"];
            return;
        }
        
        // 商品名称
        if (_goodsName.length > 0 && [[_goodsName stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]length] != 0) {
            [dic setValue:_goodsName forKey:@"name"];
        }else {
            [self showToast:@"请输入商品名称"];
            return;
        }
        
        // 规格
        if (_goodsSkuArray.count <= 1) {// 单规格
            
            if (_goodsPrice.length > 0 && _goodsPrice.floatValue > 0) {
                [dic setValue:_goodsPrice forKey:@"price"];
                
            }else {
                [self showToast:@"请输入价格"];
                return;
            }
            
            if (_goodsStock.length > 0) {
                [dic setValue:_goodsStock forKey:@"qty"];
            }else {
                [self showToast:@"请输入库存"];
                return;
            }
            
            
        }else {// 多规格
            
            NSMutableArray *list = [NSMutableArray array];
            
            for (GoodsPropertyModel *propertyModel in _goodsSkuArray) {
                NSMutableDictionary *skuDic = [NSMutableDictionary dictionary];
                [skuDic setValue:propertyModel.proId forKey:@"proId"];
                [skuDic setValue:propertyModel.name forKey:@"name"];
                if (propertyModel.price.floatValue > 0) {
                    [skuDic setValue:propertyModel.price forKey:@"price"];
                }else {
                    [self showToast:@"请输入商品价格"];
                    return;
                }
                if (propertyModel.qty.length > 0) {
                    [skuDic setValue:propertyModel.qty forKey:@"qty"];
                }else {
                    [self showToast:@"请输入商品库存"];
                    return;

                }
                
                
                [list addObject:skuDic];
            }
            
            [dic setValue:list forKey:@"list"];
            
            
        }
        
        // 商品属性
        if (_goodsPropertyArray.count == 0) {
            
//            [self showToast:@"请选择商品属性"];
//            return;
            
        }else {
            
            NSMutableString *propertyStr = [NSMutableString string];
            for (GoodsPropertyDescModel *descModel in _goodsPropertyArray) {
                NSMutableString *subString = [NSMutableString string];
                [subString appendString:[NSString stringWithFormat:@"%@:", descModel.propertyName]];
                [subString appendString:[NSString stringWithFormat:@"%@", descModel.propertyDesc]];
                
                [propertyStr appendString:[NSString stringWithFormat:@";%@", subString]];
            }
            
            NSString *finalStr;
            if (propertyStr.length > 0) {
                finalStr = [propertyStr substringFromIndex:1];
            }
            
            [dic setObject:finalStr forKey:@"propertys"];
            
            
        }
        
        // 打包盒价格
        if (_boxPrice.length > 0) {
            [dic setValue:_boxPrice forKey:@"boxPrice"];
        }else {
            [self showToast:@"请输入打包盒价格"];
            return;
        }
        
        // 商品说明 说明为非必填项
        if (_goodsDesc.length > 0){
            [dic setValue:_goodsDesc forKey:@"description"];
        }
        
        
        // 上传图片
        if (_isSelectedImage) {
            ShowProcessHud;
            [RequestManager sendRequestToUploadImageWithURLString:ServerUrl_Upload image:_photoView.image completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
                if ([resultCode isEqualToString:@"0"]) {
                    HideProcessHud;
                    MYLog(@"%@", dataDic);
                    
                    [dic setValue:resultDesc forKey:@"picture"];
                    
                    [self sendRequestToAddNewGoodsWith:dic];
                    
                }
            } failedBlock:^(NSError *error) {
                HideProcessHud;
                [self showToast:@"图片上传失败"];
            }];
        }else {
            
            [dic setValue:self.pictureUrl forKey:@"picture"];
            [self sendRequestToAddNewGoodsWith:dic];
        }
        
        
//        [self sendRequestToAddNewGoodsWith:dic];
        
        
        
        
    }else {
        
        NSMutableDictionary *dic = [NSMutableDictionary dictionary];
        
        
        if (![_categoryInfo.typeId isEqualToString:_oldCategoryInfo.typeId]) {
            [dic setValue:_categoryInfo.typeId forKey:@"typeId"];
        }
        
        // 商品名称
        if (_goodsName.length > 0 && [[_goodsName stringByTrimmingCharactersInSet:[NSCharacterSet whitespaceAndNewlineCharacterSet]]length] != 0) {
            
            if (![_goodsName isEqualToString:_oldGoodsName]) {
                [dic setValue:_goodsName forKey:@"name"];
            }
            
        }else {
            [self showToast:@"请填写商品名称"];
            return;
        }
        
        // 商品规格
        
        if (_goodsSkuArray.count <= 1) {
            
            if (_goodsPrice.length > 0 && _goodsPrice.floatValue > 0) {
                
                if (![_goodsPrice isEqualToString:_oldGoodsPrice]) {
                    [dic setValue:_goodsPrice forKey:@"price"];
                }
                
            }else {
                [self showToast:@"请输入价格"];
                return;
            }
            
            if (_goodsStock.length > 0) {
                
                if (![_goodsStock isEqualToString:_oldGoodsStock]) {// 库存发生改变
                    [dic setValue:_goodsStock forKey:@"qty"];
                }
                
            }else {
                [self showToast:@"请输入库存"];
                return;
            }
            
        }else { // 多规格
            
            if (_isSkuChanged) { // 规格已发生改变
                
                NSMutableArray *list = [NSMutableArray array];
                
                for (GoodsPropertyModel *propertyModel in _goodsSkuArray) {
                    NSMutableDictionary *skuDic = [NSMutableDictionary dictionary];
                    [skuDic setValue:propertyModel.proId forKey:@"proId"];
                    [skuDic setValue:propertyModel.name forKey:@"name"];
//                    [skuDic setValue:propertyModel.price forKey:@"price"];
//                    [skuDic setValue:propertyModel.qty forKey:@"qty"];
                    
                    if (propertyModel.price.floatValue > 0) {
                        [skuDic setValue:propertyModel.price forKey:@"price"];
                    }else {
                        [self showToast:@"请输入商品价格"];
                        return;
                    }
                    if (propertyModel.qty.length > 0) {
                        [skuDic setValue:propertyModel.qty forKey:@"qty"];
                    }else {
                        [self showToast:@"请输入商品库存"];
                        return;
                        
                    }
                    
                    [list addObject:skuDic];
                }
                
                [dic setValue:list forKey:@"list"];
                
            }
            
            
        }
        
        // 属性
        // 商品属性
        if (_goodsPropertyArray.count == 0) {
            
//            [self showToast:@"请选择商品属性"];
//            return;
            
        }else {
            
            if (_isPropertyChanged) { // 规格已发生改变
                
                NSMutableString *propertyStr = [NSMutableString string];
                for (GoodsPropertyDescModel *descModel in _goodsPropertyArray) {
                    NSMutableString *subString = [NSMutableString string];
                    [subString appendString:[NSString stringWithFormat:@"%@:", descModel.propertyName]];
                    [subString appendString:[NSString stringWithFormat:@"%@", descModel.propertyDesc]];
                    
                    [propertyStr appendString:[NSString stringWithFormat:@";%@", subString]];
                }
                
                NSString *finalStr;
                if (propertyStr.length > 0) {
                    finalStr = [propertyStr substringFromIndex:1];
                }
                
                [dic setObject:finalStr forKey:@"propertys"];
            }
            
            
            
            
        }
        
        // 打包盒价格
        if (_boxPrice.length > 0) {
            
            if (![_boxPrice isEqualToString:_oldBoxPrice]) {
                
                [dic setValue:_boxPrice forKey:@"boxPrice"];
                
            }
            
        }else {
            [self showToast:@"请输入打包盒价格"];
            return;
        }
        
        // 商品说明 说明为非必填项
        if (_goodsDesc.length > 0){
            if (![_goodsDesc isEqualToString:_oldGoodsDesc]) {
                [dic setValue:_goodsDesc forKey:@"description"];
            }
            
        }
        
        if (!_isPictureChanged && !_isGetImageUrl && dic.allKeys.count == 0) {
            [self showToast:@"您没有更改任何信息"];
            return;
        }
        
        // 如果图片发生改变首先上传图片
        
        if (_isPictureChanged || _isGetImageUrl) {
            if (_isPictureChanged) {
                ShowProcessHud;
                [RequestManager sendRequestToUploadImageWithURLString:ServerUrl_Upload image:_photoView.image completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
                    if ([resultCode isEqualToString:@"0"]) {
                        HideProcessHud;
                        [self showToast:@"图片上传成功"];
                        MYLog(@"%@", resultDesc);
                        MYLog(@"%@", dataDic);
                        [dic setValue:resultDesc forKey:@"picture"];
                        [self sendRequestToUpdateGoodsInfoWith:dic];
                       
                    }
                    
                } failedBlock:^(NSError *error) {
                    HideProcessHud;
                    [self showToast:@"图片上传失败"];
                }];
            }else {
                
                [dic setValue:self.pictureUrl forKey:@"picture"];
                [self sendRequestToUpdateGoodsInfoWith:dic];
            }
            

        }else {
        
            [self sendRequestToUpdateGoodsInfoWith:dic];
        }
        
    }
    
    
    
}


- (void)reLoadHeaderViewFrameWithState:(BOOL)isShow {
    
    if (isShow) {
        _isShowPicture = YES;
        _headerView.frame = CGRectMake(0, 0, Screen_Width, Screen_Width);
        _photoView.frame = CGRectMake(30, 45, Screen_Width - 60, Screen_Width - 60);
        _addPhotoView.hidden = YES;
        _reSetImageTapView.frame = CGRectMake(0, _photoView.frame.size.height - 40, _photoView.frame.size.width, 40);
        _reSetImageTapView.hidden = NO;
        
        _goodsInfoTable.tableHeaderView = _headerView;
    }
}

- (void)addPhotoBtnAction {
    
    UIActionSheet *sheet;
    if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera])
        sheet  = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:AlertBtn_Cancle destructiveButtonTitle:nil otherButtonTitles:ChooseFromLocal, @"从图库选取", TakePhoto, nil];
    else
        sheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:AlertBtn_Cancle destructiveButtonTitle:nil otherButtonTitles:ChooseFromLocal, @"从图库选取", nil];
    [sheet showInView:self.view];

}

- (void)createHideKeyBoardView {
    
    self.hideKeyBoardView = [[UIView alloc] initWithFrame:CGRectMake(0, Screen_Height - 30, Screen_Width, 30)];
    [CreateView createImageViewWithFrame:CGRectMake(Screen_Width - 35, 8.5, 25, 13) image:ImageNamed(@"goods_jt_down") superView:_hideKeyBoardView];
    UIView *tapView = [[UIView alloc] initWithFrame:CGRectMake(Screen_Width - 60, 0, 60, 30)];
    UITapGestureRecognizer *hideTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(hideKeyBoardViewAction)];
    [tapView addGestureRecognizer:hideTap];
    
    [_hideKeyBoardView addSubview:tapView];
    _hideKeyBoardView.hidden = YES;
    [self.view addSubview:_hideKeyBoardView];
    
}

- (void)hideKeyBoardViewAction {
    _isKeyBoardHidden = YES;
    [self.view endEditing:YES];
}

#pragma mark - 键盘变化通知
- (void)keyboardWillChangeFrame:(NSNotification *)aNotification
{
    
    
    //获取键盘的高度
    NSDictionary *userInfo = [aNotification userInfo];
    NSValue *aValue = [userInfo objectForKey:UIKeyboardFrameEndUserInfoKey];
    CGRect keyboardRect = [aValue CGRectValue];
    
    CGFloat keyboardHeight = keyboardRect.size.height;
    self.goodsInfoTable.frame = CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next - keyboardHeight - 30);

    self.hideKeyBoardView.frame = CGRectMake(0, keyboardRect.origin.y - 30, Screen_Width, 30);
    
    
   
}

- (void)keyboardWillHide:(NSNotification *)notification
{
    _hideKeyBoardView.hidden = YES;
    self.goodsInfoTable.frame = CGRectMake(0, Start_Height, Screen_Width, Show_Height_Next - 48);
}

#pragma mark - actionSheet代理方法
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
    
    NSUInteger sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
    // 判断是否支持相机
    if ([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypeCamera]) {
        switch (buttonIndex) {
            case 0://相册
                sourceType = UIImagePickerControllerSourceTypePhotoLibrary;
                break;
            case 1:{
                SelectPictureCategoryViewController *vc = [[SelectPictureCategoryViewController alloc] initWithSelectedBlock:^(NSString *picUrl) {
                    if (_myType == GoodsChangeTypeAdd && !_isShowPicture) {
                        self.isGetImageUrl = YES;
                        self.isSelectedImage = NO;
                        [self reLoadHeaderViewFrameWithState:YES];
                    }if (_myType == GoodsChangeTypeAdd && _isShowPicture) {
                        self.isGetImageUrl = YES;
                        self.isSelectedImage = NO;
                    }else {
                        
                        _isPictureChanged = NO;
                        _isGetImageUrl = YES;
                    }
                    self.pictureUrl = picUrl;
                    [_photoView sd_setImageWithURLStr:picUrl placeholderImage:DefaultImage2];

                    
                }];
                
                [self.navigationController pushViewController:vc animated:YES];
                
            }
                return;
            case 2: //相机
                sourceType = UIImagePickerControllerSourceTypeCamera;
                break;
            default:
                return;
        }
    }else {
        if (buttonIndex == 0) {
            sourceType = UIImagePickerControllerSourceTypeSavedPhotosAlbum;
        }else if (buttonIndex == 1) {
            SelectPictureCategoryViewController *vc = [[SelectPictureCategoryViewController alloc] initWithSelectedBlock:^(NSString *picUrl) {
                
                MYLog(@"%@", picUrl);
                
                if (_myType == GoodsChangeTypeAdd && !_isShowPicture) {
                    self.isGetImageUrl = YES;
                    self.isSelectedImage = NO;
                    [self reLoadHeaderViewFrameWithState:YES];
                }if (_myType == GoodsChangeTypeAdd && _isShowPicture) {
                    self.isGetImageUrl = YES;
                    self.isSelectedImage = NO;
                }else {
                    
                    _isPictureChanged = NO;
                    _isGetImageUrl = YES;
                }
                self.pictureUrl = picUrl;
                [_photoView sd_setImageWithURLStr:picUrl placeholderImage:DefaultImage2];
                
                
            }];
            
            [self.navigationController pushViewController:vc animated:YES];
            
            return;
        }else {
            return;
        }
    }
    
    UIImagePickerController *imagePickerController = [[UIImagePickerController alloc] init];
    imagePickerController.delegate = (id)self;
    imagePickerController.allowsEditing = YES;
    imagePickerController.sourceType = sourceType;
    
    [self presentViewController:imagePickerController animated:YES completion:nil];
    
}

#pragma mark - ImagePickerController代理方法
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary<NSString *,id> *)info {
    
    [self dismissViewControllerAnimated:YES completion:nil];
    if (_myType == GoodsChangeTypeAdd && !_isShowPicture) {
        self.isGetImageUrl = NO;
        self.isSelectedImage = YES;
        [self reLoadHeaderViewFrameWithState:YES];
    }if (_myType == GoodsChangeTypeAdd && _isShowPicture) {
        self.isGetImageUrl = NO;
        self.isSelectedImage = YES;
    }else {
        
        _isPictureChanged = YES;
        _isGetImageUrl = NO;
    }
    
    //获取编辑后的图片
    UIImage *image = info[@"UIImagePickerControllerEditedImage"];
    self.photoView.image = image;

}

- (void)imagePickerControllerDidCancel:(UIImagePickerController *)picker {
    [self dismissViewControllerAnimated:YES completion:nil];
}

#pragma mark - tableView的代理方法
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    
    return 5;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    if (section == 0) {
        return 2;
    }else if (section == 1){
        if (_goodsSkuArray.count <= 1) {
            return 2;
        }else {
            return _goodsSkuArray.count;
        }
    }else if (section == 2) {
        if (_goodsPropertyArray.count <= 2) {
            return 2;
        }else {
            return _goodsPropertyArray.count;
        }
    }else {
        return 1;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    if (indexPath.section == 0) {
        return 48;
    }else if (indexPath.section == 1) {
        if (_goodsSkuArray.count <= 1) {
            return 48;
        }else {
            return 112;
        }
    }else if (indexPath.section == 2) {
        
        if (_goodsPropertyArray.count == 0) {
            return 48;
        }else if (_goodsPropertyArray.count == 1) {
            if (indexPath.row == 0) {
                return 120;
            }else {
                return 48;
            }
        }else {
            return 120;
        }

    }else if (indexPath.section == 3) {
        return 48;
    }else {
        
        return 98;
    }
    return 0;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    if (section == 1) {
        
        if (_goodsSkuArray.count <= 1) {
            UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 10)];
            view.backgroundColor = ColorWithHexString(Color_BackgroundF2F2F2);
            return view;
        }else {
        
            UIView *headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 40)];
            UIView *greyView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 10)];
            greyView.backgroundColor = ColorWithHexString(Color_BackgroundF2F2F2);
            [headerView addSubview:greyView];
            
            UIView *whiteView = [[UIView alloc] initWithFrame:CGRectMake(0, 10, Screen_Width, 30)];
            whiteView.backgroundColor = WHITE_COLOR;
            [headerView addSubview:whiteView];
            UIView *lineView = [[UIView alloc] initWithFrame:CGRectMake(0, 16, 3, 14)];
            lineView.backgroundColor = ColorWithHexString(Color_MainFFDA44);
            [whiteView addSubview:lineView];
            
            [CreateView createLabelWithFrame:CGRectMake(SpaceLeftRight, 16, 100, 14) text:GoodsGuiGe fontSize:FontSize_14 textColorStr:ColorText_333333 superView:whiteView];
            
            return headerView;
            
        }
        
    }else {
        
        UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 10)];
        view.backgroundColor = ColorWithHexString(Color_BackgroundF2F2F2);
        return view;
    }
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    if (section == 1) {
        if (_goodsSkuArray.count <= 1) {
            return 10;
        }else {
            return 40;
        }
    }else {
        return 10;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section {
    
    if (section == 1) {
        UIView *footView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, Screen_Width, 40)];

        footView.backgroundColor = WHITE_COLOR;
        NSString *string = ManyGuiGe;
        CGFloat width = [CommonUtil widthForString:string fontSize:FontSize_14];
        
        UILabel *lab = [CreateView createLabelWithFrame:CGRectMake(Screen_Width - SpaceLeftRight - width, 11, width, 18) text:string fontSize:FontSize_14 textColorStr:@"#34aeff" superView:footView];
        UIImageView *imageView = [CreateView createImageViewWithFrame:CGRectMake(CGRectGetMinX(lab.frame) - 28, lab.frame.origin.y, 18, 18) image:ImageNamed(@"goods_tj2") superView:footView];
        imageView.userInteractionEnabled = YES;
        [footView addSubview:imageView];
        
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(addSkuButtonAction:)];
        [footView addGestureRecognizer:tap];
        return footView;
    }else {
        return nil;
    }
    
}

- (void)addSkuButtonAction:(UITapGestureRecognizer *)sender {
    
    _isKeyBoardHidden = YES;
    [self.view endEditing:YES];
    
    
    NSMutableArray *array = [NSMutableArray arrayWithArray:_goodsSkuArray];
    SelectGuigeViewController *selectVC = [[SelectGuigeViewController alloc] initWithType:ViewTypeGuige dataArray:array CompleteBlock:^(NSArray<GoodsPropertyModel *> *array, CategoryModel *model) {
        
        _isSkuChanged = YES;// 记录规格已发生改变
        if (array.count == 0) {
            _goodsStock = @"";
            _goodsPrice = @"";
            [_goodsSkuArray removeAllObjects];
            
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:1];
            [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];
        }else if (array.count == 1) {
            GoodsPropertyModel *model = array.firstObject;
            _goodsPrice = model.price;
            _goodsStock = model.qty;
            [_goodsSkuArray removeAllObjects];
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:1];
            [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];
        }else {
            [_goodsSkuArray removeAllObjects];
            [_goodsSkuArray addObjectsFromArray:array];
            
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:1];
            [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];
        }
        
        
    }];
    
    [self.navigationController pushViewController:selectVC animated:YES];
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section {
    if (section == 1) {
        return 40;
    }else {
        return 0.01f;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (indexPath.section == 0) {
        if (indexPath.row == 0) {
            UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:(UITableViewCellStyleValue1) reuseIdentifier:@"firstCell"];
            UILabel *chooseTypeLab = [CreateView createLabelWithFrame:CGRectMake(SpaceLeftRight, 17, 90, 14) text:@"" fontSize:FontSize_14 textColorStr:ColorText_333333 superView:cell.contentView];
            chooseTypeLab.text = ChooseCategory;
            
            UILabel *typeLabel = [CreateView createLabelWithFrame:CGRectMake(120, 14, Screen_Width - 135, 14) text:@"" fontSize:FontSize_14 textColorStr:ColorText_333333 superView:cell.contentView];
            typeLabel.textAlignment = NSTextAlignmentRight;
            if (_categoryInfo.typeId.length > 0) {
                cell.accessoryType = UITableViewCellAccessoryNone;
                typeLabel.text = _categoryInfo.name;
                
            }else {
                cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
                typeLabel.text = @"";
            }
            UIView *line = [[UIView alloc] initWithFrame:CGRectMake(SpaceLeftRight, 47.5, Screen_Width - SpaceLeftRight, 0.5)];
            line.backgroundColor = ColorWithHexString(ColorLine_ededed);
            [cell.contentView addSubview:line];
            
            cell.selectionStyle = UITableViewCellSeparatorStyleNone;
            return cell;
            
        }else{
            TitleTextCell *cell = [tableView dequeueReusableCellWithIdentifier:@"titleTextCell" forIndexPath:indexPath];
            cell.titleNameLabel.text = GoodsName;
            cell.enterTF.placeholder = EnterGoodsName;
            cell.enterTF.tag = indexPath.section * 10000 + indexPath.row * 100;
            cell.enterTF.keyboardType = UIKeyboardTypeDefault;
            cell.enterTF.delegate = self;
            
            if (_goodsName.length > 0) {
                cell.enterTF.text = _goodsName;
            }else {
                cell.enterTF.text = @"";
            }
            
            cell.selectionStyle = UITableViewCellSeparatorStyleNone;
            return cell;
        }
        
    }else if (indexPath.section == 1) {
        // 如果规格小于等于1 说明为单规格商品
        if (_goodsSkuArray.count <= 1) {
        
            TitleTextCell *cell = [tableView dequeueReusableCellWithIdentifier:@"titleTextCell" forIndexPath:indexPath];
        
            if (indexPath.row == 0) {
                cell.titleNameLabel.text = GoodsPrice;
                cell.enterTF.placeholder = EnterGoodsPrice;
                cell.enterTF.keyboardType = UIKeyboardTypeDecimalPad;
                if (_goodsPrice.length > 0) {
                    cell.enterTF.text = _goodsPrice;
                }else {
                    cell.enterTF.text = @"";
                }
                
            }else{
                cell.titleNameLabel.text = StockSet;
                cell.enterTF.placeholder = @"99999";
                cell.enterTF.keyboardType = UIKeyboardTypeNumberPad;
                if (_goodsStock.length > 0) {
                    cell.enterTF.text = _goodsStock;
                    
                }else {
                    cell.enterTF.text = @"";
                }
            }
            cell.enterTF.delegate = self;
            cell.enterTF.tag = indexPath.section * 10000 + indexPath.row * 100;
            
            cell.selectionStyle = UITableViewCellSeparatorStyleNone;
            return cell;
            
        }else {
            GoodsSkuCell *cell = [tableView dequeueReusableCellWithIdentifier:@"goodsSkuCell" forIndexPath:indexPath];
            
            GoodsPropertyModel *info = _goodsSkuArray[indexPath.row];
            cell.priceTextField.tag = indexPath.section * 10000 + indexPath.row * 100 + 1;
            cell.stockTextField.tag = indexPath.section * 10000 + indexPath.row * 100 + 2;
            cell.priceTextField.delegate = self;
            cell.priceTextField.keyboardType = UIKeyboardTypeDecimalPad;
            cell.stockTextField.delegate = self;
            cell.stockTextField.keyboardType = UIKeyboardTypeNumberPad;
            
            // 内容显示
            cell.skuNameLabel.text = info.name;
            cell.priceTextField.text = info.price;
            cell.stockTextField.text = info.qty;
            
            [cell.deleteButton addTarget:self action:@selector(skuDeleteAction:) forControlEvents:(UIControlEventTouchUpInside)];
        
            cell.selectionStyle = UITableViewCellSeparatorStyleNone;
            return cell;
        }
    
    }
    else if (indexPath.section == 2) {
        
        GoodsEditPropertyCell *cell = [tableView dequeueReusableCellWithIdentifier:@"goodsEditPropertyCell" forIndexPath:indexPath];
        
        if (_goodsPropertyArray.count == 0) {
            cell.downBackView.hidden = YES;
            
        }else if (_goodsPropertyArray.count == 1) {
            if (indexPath.row == 0) {
                cell.downBackView.hidden = NO;
                GoodsPropertyDescModel *descModel = _goodsPropertyArray[indexPath.row];
                cell.propertyNameLabel.text = descModel.propertyName;

                cell.contentLabel.text = descModel.propertyDesc;
                
            }else {
     
                cell.downBackView.hidden = YES;
            }
        }else {

            GoodsPropertyDescModel *descModel = _goodsPropertyArray[indexPath.row];
            cell.propertyNameLabel.text = descModel.propertyName;
       
            cell.contentLabel.text = descModel.propertyDesc;
            cell.downBackView.hidden = NO;
        }
        cell.propertyNumLabel.text = [NSString stringWithFormat:@"%@%ld", Property, indexPath.row + 1];
        [cell.deleteButton addTarget:self action:@selector(propertyDeleteAction:) forControlEvents:(UIControlEventTouchUpInside)];
        [cell.addButton addTarget:self action:@selector(addPropertyAciton:) forControlEvents:(UIControlEventTouchUpInside)];
        
        
        
        
        cell.selectionStyle = UITableViewCellSeparatorStyleNone;
        return cell;
    }else if (indexPath.section == 3) {
        TitleTextCell *cell = [tableView dequeueReusableCellWithIdentifier:@"titleTextCell" forIndexPath:indexPath];
        cell.titleNameLabel.text = BoxPrice;
        cell.enterTF.placeholder = EnterBoxPrice;
        if (_boxPrice.length > 0) {
            cell.enterTF.text = _boxPrice;
        }else {
            cell.enterTF.text = @"";
        }
        cell.enterTF.keyboardType = UIKeyboardTypeDecimalPad;
        cell.enterTF.tag = indexPath.section * 10000 + indexPath.row * 100;
        cell.enterTF.delegate = self;
        
        
        return cell;
    }else {
        
        UITableViewCell *cell = [[UITableViewCell alloc] initWithStyle:(UITableViewCellStyleValue1) reuseIdentifier:@"lastCell"];
        
        [CreateView createLabelWithFrame:CGRectMake(SpaceLeftRight, 17, 60, 14) text:GoodsDescription fontSize:FontSize_14 textColorStr:ColorText_333333 superView:cell.contentView];
        UITextView *textView = [[UITextView alloc] initWithFrame:CGRectMake(SpaceLeftRight, 40, Screen_Width - 30, 35)];
        textView.keyboardType = UIKeyboardTypeDefault;
        textView.delegate = self;
        if (_goodsDesc.length > 0) {
           textView.text = _goodsDesc;
        }
        [cell.contentView addSubview:textView];
        
        cell.selectionStyle = UITableViewCellSeparatorStyleNone;
        return cell;
    }
   
}
// 规格删除
- (void)skuDeleteAction:(UIButton *)sender {
    
    _isSkuChanged = YES;
    
    GoodsSkuCell *cell = (GoodsSkuCell *)sender.superview.superview;
    NSIndexPath *indexPath = [_goodsInfoTable indexPathForCell:cell];
    
    if (_goodsSkuArray.count == 2) {
        [_goodsSkuArray removeObjectAtIndex:indexPath.row];
        GoodsPropertyModel *model = _goodsSkuArray.firstObject;
        _goodsPrice = model.price;
        _goodsStock = model.qty;
        [_goodsSkuArray removeAllObjects];
    }else {
        [_goodsSkuArray removeObjectAtIndex:indexPath.row];
    }
    NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:1];
    [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];
    
}

// 属性删除
- (void)propertyDeleteAction:(UIButton *)sender {
    
    _isPropertyChanged = YES;
    
    GoodsEditPropertyCell *cell = (GoodsEditPropertyCell *)sender.superview.superview.superview;
    NSIndexPath *indexPath = [_goodsInfoTable indexPathForCell:cell];
    // 删除数据
    [_goodsPropertyArray removeObjectAtIndex:indexPath.row];
    // 更新界面
    NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:2];
    [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];
}

- (void)addPropertyAciton:(UIButton *)sender {
    // 隐藏键盘
    _isKeyBoardHidden = YES;
    [self.view endEditing:YES];
    
    GoodsEditPropertyCell *cell = (GoodsEditPropertyCell *)sender.superview.superview;
    NSIndexPath *indexPath = [_goodsInfoTable indexPathForCell:cell];
    _selectPropertyIndex = indexPath.row;
    
    SelectGuigeViewController *selectVC = [[SelectGuigeViewController alloc] initWithType:ViewTypeShuxing dataArray:nil CompleteBlock:^(NSArray<GoodsPropertyModel *> *array, CategoryModel *model) {
        
        if (model == nil) {
            
            
            
        }else {
            _isPropertyChanged = YES; // 记录属性已发生改变
            
            GoodsPropertyDescModel *descModel = [[GoodsPropertyDescModel alloc] init];
            descModel.propertyName = model.name;
            NSMutableString *descString = [NSMutableString string];
            for (GoodsPropertyModel *propertyModel in model.dataArray) {
                [descString appendString:[NSString stringWithFormat:@",%@", propertyModel.name]];
            }
            
            NSString *finalStr;
            if (descString.length > 0) {
                finalStr = [descString substringFromIndex:1];
            }else {
                finalStr = @"";
            }
            descModel.propertyDesc = finalStr;
            
            if (_selectPropertyIndex == 0) {// 点击第一个添加
                if (_goodsPropertyArray.count == 0) {
                    [_goodsPropertyArray addObject:descModel];
                }else {
                    GoodsPropertyDescModel *firstModel = _goodsPropertyArray.firstObject;
                    firstModel.propertyName = descModel.propertyName;
                    firstModel.propertyDesc = descModel.propertyDesc;
                }
            }else {// 点击第二个添加
                
                if (_goodsPropertyArray.count <= 1) {
                    [_goodsPropertyArray addObject:descModel];
                }else {
                    GoodsPropertyDescModel *secondModel = _goodsPropertyArray.lastObject;
                    secondModel.propertyName = descModel.propertyName;
                    secondModel.propertyDesc = descModel.propertyDesc;
                }
                
            }
            // 刷新属性的分区
            NSIndexSet *indexSet = [NSIndexSet indexSetWithIndex:2];
            [self.goodsInfoTable reloadSections:indexSet withRowAnimation:(UITableViewRowAnimationNone)];

            
        }
        
    }];
    [self.navigationController pushViewController:selectVC animated:YES];
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (indexPath.section == 0 && indexPath.row == 0) {
        // 隐藏键盘
        _isKeyBoardHidden = YES;
        [self.view endEditing:YES];
        
        SelectCategoryViewController *vc;
//        if (_myType == GoodsChangeTypeAdd) {
//            vc = [[SelectCategoryViewController alloc] initWithCategoryInfo:_categoryInfo block:^(GoodsCategoryInfo *model) {
//                _categoryInfo = model;
//            }];
//        }else {
            vc = [[SelectCategoryViewController alloc] initWithCategoryInfo:_categoryInfo block:^(GoodsCategoryInfo *model) {
                _isChoosedCatogory = YES;
                _categoryInfo = model;
                [self.goodsInfoTable reloadRowsAtIndexPaths:@[[NSIndexPath indexPathForRow:0 inSection:0]] withRowAnimation:(UITableViewRowAnimationNone)];
            }];
//        }
        
        [self.navigationController pushViewController:vc animated:YES];
    }
}

#pragma mark - textField的代理方法
- (void)textFieldDidBeginEditing:(UITextField *)textField {
    _hideKeyBoardView.hidden = NO;
    _isKeyBoardHidden = NO;
}

- (void)textFieldDidEndEditing:(UITextField *)textField {
    
    NSInteger tag = textField.tag;
    NSInteger section = tag/10000;// 当前分区
    NSInteger row = (tag - section * 10000)/100;// 当前行
    
    NSInteger textFieldNum = tag % 100;// 如果余数为1 说明是规格的价格;如果余数为2 说明是规格的库存量
    
    
    switch (section) {
        case 0:// 第一个分区
            _goodsName = textField.text;
            break;
        case 1:
            if (_goodsSkuArray.count <= 1) {// 只包含单规格的情况
                if (row == 0) {
                    _goodsPrice = textField.text;
                }else {
                    _goodsStock = textField.text;
                }
            }else {
                // 此时为多规格
                
                _isSkuChanged = YES;// 记录规格已发生改变
                
                GoodsPropertyModel *model = _goodsSkuArray[row];
                if (textFieldNum == 1) {
                    model.price = textField.text;
                }else if (textFieldNum == 2) {
                    model.qty = textField.text;
                }
                
            }
        
            break;
        case 3:
            _boxPrice = textField.text;
            break;
            
        default:
            break;
    }
    
    
}

- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string {
    
    NSInteger tag = textField.tag;
    NSInteger section = tag/10000;// 当前分区
    NSInteger row = (tag - section * 10000)/100;// 当前行
    
    NSInteger textFieldNum = tag % 100;// 如果余数为1 说明是规格的价格;如果余数为2 说明是规格的库存量

    
    if (section == 0) {// 名称
        
        NSInteger existedLength = textField.text.length;
        NSInteger selectedLength = range.length;
        NSInteger replaceLength = string.length;
        NSInteger pointLength = existedLength - selectedLength + replaceLength;
        //超过8位 就不能在输入了
        if (pointLength > 24) {
            return NO;
        }
        
    }else if ((section == 1 && _goodsSkuArray.count <= 1 && row == 0) || (section == 1 && _goodsSkuArray.count > 1 && textFieldNum == 1) || section == 3) { // 价格输入
        
        NSInteger existedLength = textField.text.length;
        NSInteger selectedLength = range.length;
        NSInteger replaceLength = string.length;
        NSInteger pointLength = existedLength - selectedLength + replaceLength;
        //超过8位 就不能在输入了
        if (pointLength > 8) {
            return NO;
        }
        
        NSScanner *scanner = [NSScanner scannerWithString:string];
        NSCharacterSet *numbers;
        NSRange pointRange = [textField.text rangeOfString:@"."];
        if ( (pointRange.length > 0) && (pointRange.location < range.location  || pointRange.location > range.location + range.length) ){
            numbers = [NSCharacterSet characterSetWithCharactersInString:@"0123456789"];
        }else{
            numbers = [NSCharacterSet characterSetWithCharactersInString:@"0123456789."];
        }
        if ( [textField.text isEqualToString:@""] && [string isEqualToString:@"."] ){
            return NO;
        }
        // 已经输入五位数,下次输入只能输入小数点或者删除
        if (textField.text.length == 5 && pointRange.length == 0) {
            if ([string isEqualToString:@"."] || [string isEqualToString:@""]) {
                return YES;
            }else {
                return NO;
            }
        }
        short remain = 2; //保留2位小数
        NSString *tempStr = [textField.text stringByAppendingString:string];
        NSUInteger strlen = [tempStr length];
        
        if(pointRange.length > 0 && pointRange.location > 0){ //判断输入框内是否含有“.”
            if([string isEqualToString:@"."]){ //当输入框内已经含有“.”时，如果再输入“.”则被视为无效。
                return NO;
            }
            if(strlen > 0 && (strlen - pointRange.location) > remain+1){ //当输入框内已经含有“.”，当字符串长度减去小数点前面的字符串长度大于需要要保留的小数点位数，则视当次输入无效
                return NO;
            }
        }
        NSRange zeroRange = [textField.text rangeOfString:@"0"];
        if(zeroRange.length == 1 && zeroRange.location == 0){ //判断输入框第一个字符是否为“0”
            if(![string isEqualToString:@"0"] && ![string isEqualToString:@"."] && [textField.text length] == 1){ //当输入框只有一个字符并且字符为“0”时，再输入不为“0”或者“.”的字符时，则将此输入替换输入框的这唯一字符
                textField.text = string;
                return NO;
            }else{
                if(pointRange.length == 0 && pointRange.location > 0){ //当输入框第一个字符为“0”时，并且没有“.”字符时，如果当此输入的字符为“0”，则视当此输入无效
                    if([string isEqualToString:@"0"]){
                        return NO;
                    }
                }
            }
        }
        NSString *buffer;
        if ( ![scanner scanCharactersFromSet:numbers intoString:&buffer] && ([string length] != 0) ){
            return NO;
        }else{
            return YES;
        }
        
    }else if ((section == 1 && _goodsSkuArray.count <= 1 && row == 1) || (section == 1 && _goodsSkuArray.count > 1 && textFieldNum == 2)) {// 库存

        NSInteger existedLength = textField.text.length;
        NSInteger selectedLength = range.length;
        NSInteger replaceLength = string.length;
        NSInteger pointLength = existedLength - selectedLength + replaceLength;
        //超过4位 就不能在输入了
        if (pointLength > 5) {
            return NO;
        }
        return [self validateNumber:string];

        
    }

    
    return YES;
}

- (BOOL)textFieldShouldReturn:(UITextField *)textField {
    [textField resignFirstResponder];
    return YES;
}

// 限制只能输入数字
- (BOOL)validateNumber:(NSString*)number {
    BOOL res = YES;
    NSCharacterSet* tmpSet = [NSCharacterSet characterSetWithCharactersInString:@"0123456789"];
    int i = 0;
    while (i < number.length) {
        NSString * string = [number substringWithRange:NSMakeRange(i, 1)];
        NSRange range = [string rangeOfCharacterFromSet:tmpSet];
        if (range.length == 0) {
            res = NO;
            break;
        }
        i++;
    }
    return res;
}


#pragma mark - textView的代理方法

- (void)textViewDidBeginEditing:(UITextView *)textView {
    _hideKeyBoardView.hidden = NO;
    _isKeyBoardHidden = NO;
    
    [self.goodsInfoTable setContentOffset:CGPointMake(0, self.goodsInfoTable.contentSize.height - self.goodsInfoTable.frame.size.height) animated:NO];
}


- (void)textViewDidEndEditing:(UITextView *)textView {
    // 商品描述
    _goodsDesc = textView.text;
    
}

- (BOOL)textView:(UITextView *)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString *)text {
    
    
    if ([text isEqualToString:@"\n"]) {
        
        [textView resignFirstResponder];
        
        return NO;
        
    }
    NSInteger existedLength = textView.text.length;
    NSInteger selectedLength = range.length;
    NSInteger replaceLength = text.length;
    NSInteger pointLength = existedLength - selectedLength + replaceLength;
    //超过8位 就不能在输入了
    if (pointLength > 30) {
        return NO;
    }
    
    return YES;
    
}


#pragma mark - 网络请求
    
- (void)sendRequestToAddNewGoodsWith:(NSMutableDictionary *)dic {
    ShowProcessHud;
    [dic setValue:@"1" forKey:@"custId"];
    [dic setValue:@"5B27F1D916674E01E053C208A8C0BEDF" forKey:@"shopId"];
    [RequestManager sendPostRequestWithURLString:ServerUrl_Write modular:Modular_goods requestName:@"addGoodsInfo" parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        HideProcessHud;
        [self showToast:@"上传商品成功"];
        [self backAfterDelay];
        
    } failedBlock:^(NSError *error) {
        HideProcessHud;
        [self showToast:ToastMsg_NetworkFailed];
    }];
    
}

- (void)sendRequestToUpdateGoodsInfoWith:(NSMutableDictionary *)dic {
    ShowProcessHud;
    
    [dic setValue:self.goodsId forKey:@"goodsId"];
    [RequestManager sendPostRequestWithURLString:ServerUrl_Write modular:Modular_goods requestName:@"updateGoodsInfo" parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        HideProcessHud;
        [self showToast:@"修改信息成功"];
        [self backAfterDelay];
    } failedBlock:^(NSError *error) {
        
        HideProcessHud;
        [self showToast:ToastMsg_NetworkFailed];
    }];
}

- (void)backAfterDelay {
    
    [self performSelector:@selector(back) withObject:nil afterDelay:1.5];

}

- (void)back {
    [self.navigationController popViewControllerAnimated:YES];
    if (_backBlock) {
        _backBlock();
    }
}

- (void)sendRequestToGetGoodsInfoWithGoodsId:(NSString *)goodsId {
    
    ShowProcessHud;
    NSMutableDictionary *dic = [NSMutableDictionary dictionary];
    [dic setValue:@"5B27F1D916674E01E053C208A8C0BEDF" forKey:@"shopId"];
    [dic setValue:self.goodsId forKey:@"goodsId"];
    
    [RequestManager sendPostRequestWithURLString:ServerUrl_Read modular:Modular_goods requestName:@"queryGoodsDetail" parameters:dic completeBlock:^(NSString *resultCode, NSString *resultDesc, NSDictionary *dataDic) {
        HideProcessHud;
        if ([resultCode isEqualToString:@"0"]) {
            MYLog(@"%@", dataDic);
            
            _goodsPicture = AvailableString([dataDic objectForKey:@"picture"]);
            
            _boxPrice = AvailableString([dataDic objectForKey:@"boxPrice"]);
            _oldBoxPrice = AvailableString([dataDic objectForKey:@"boxPrice"]);
            
            _goodsName = AvailableString([dataDic objectForKey:@"name"]);
            _oldGoodsName = AvailableString([dataDic objectForKey:@"name"]);
            
            NSArray *listArray = [dataDic objectForKey:@"list"];
            if (listArray.count == 0) {
                _goodsPrice = AvailableString([dataDic objectForKey:@"price"]);
                _goodsStock = [NSString stringWithFormat:@"%@", [dataDic objectForKey:@"qty"]];
                
                _oldGoodsPrice = AvailableString([dataDic objectForKey:@"price"]);
                _oldGoodsStock = [NSString stringWithFormat:@"%@", [dataDic objectForKey:@"qty"]];
            }else {
                
                for (NSDictionary *dictionary in listArray) {
                    GoodsPropertyModel *info = [[GoodsPropertyModel alloc] init];
                    info.proId = AvailableString([dictionary objectForKey:@"skuId"]);
                    info.name = AvailableString([dictionary objectForKey:@"skuName"]);
                    info.price = AvailableString([dictionary objectForKey:@"skuPrice"]);
                    info.qty = [NSString stringWithFormat:@"%@", [dictionary objectForKey:@"skuqty"]];
                    
                    [_goodsSkuArray addObject:info];
                }
                
                
            }
            
            _goodsDesc = AvailableString([dataDic objectForKey:@"description"]);
            _oldGoodsDesc = AvailableString([dataDic objectForKey:@"description"]);
            
            _isRecommend = ((NSNumber *)[dataDic objectForKey:@"isRecommend"]).integerValue;
            _oldIsRecommend = ((NSNumber *)[dataDic objectForKey:@"isRecommend"]).integerValue;
            
            _categoryInfo.typeId = AvailableString([dataDic objectForKey:@"typeId"]);
            _categoryInfo.name = AvailableString([dataDic objectForKey:@"typeName"]);
            
            _oldCategoryInfo.typeId = AvailableString([dataDic objectForKey:@"typeId"]);
            _oldCategoryInfo.name = AvailableString([dataDic objectForKey:@"typeName"]);
            
            // 如果属性字符串存在
            NSString *propertys = AvailableString([dataDic objectForKey:@"propertys"]);
            if (propertys.length > 0) {
                
                NSArray *propertyArray = [propertys componentsSeparatedByString:@";"];
                
                for (NSString *propertySubStr in propertyArray) {
                    NSArray *subArray = [propertySubStr componentsSeparatedByString:@":"];
                    GoodsPropertyDescModel *descModel = [[GoodsPropertyDescModel alloc] init];
                    descModel.propertyName = subArray.firstObject;
                    descModel.propertyDesc = subArray.lastObject;
                
                    [_goodsPropertyArray addObject:descModel];
                }
                
            }
            
        
            
            [self createSubViews];
            [_photoView sd_setImageWithURLStr:_goodsPicture placeholderImage:DefaultImage2];
            
        }
    } failedBlock:^(NSError *error) {
        HideProcessHud;
        [self showToast:ToastMsg_NetworkFailed];
    }];
    
    
    
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
}
*/

@end
